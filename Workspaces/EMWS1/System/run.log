NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16075      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16076      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16077      put '<Node Id="FIMPORT" Event="Run" Pid="7616" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Run" Pid="7616" Gridid=""/>';
16078      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=COB-MBA058,
      Local Host IP addr=136.165.162.244,
      Peer Hostname Name=COB-MBA058.ad.louisville.edu,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=50479,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16079      %let emloopmode =;
*------------------------------------------------------------* 
* 
* FIMPORT : Beginning update before running 
* datetime : 19NOV2018:23:46:04 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'Project_4';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Project 4';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16282      %let emexceptionString =;
16283      %let EMEXCEPTIONSTRING=;
16284      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16285      * UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   * UPDATE: FIMPORT;
16286      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16287      %let EM_ACTION = UPDATE;
16288      %let syscc = 0;
16289      /* Fimport.source */
16290      %macro main;
16291            %if %upcase(&EM_ACTION) = CREATE %then %do;
16292               filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16293               %include temp;
16294               filename temp;
16295               %create;
16296            %end;
16297            %else
16298            %if %upcase(&EM_ACTION) = TRAIN %then %do;
16299               filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16300               %include temp;
16301               filename temp;
16302               %train;
16303            %end;
16304            %else
16305            %if %upcase(&EM_ACTION) = UPDATE %then %do;
16306               filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16307               %include temp;
16308               filename temp;
16309               %update;
16310            %end;
16311            %else
16312            %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16313               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16314               %include temp;
16315               filename temp;
16316               %property;
16317            %end;
16318             %else
16319            %if %upcase(&EM_ACTION) = SCORE %then %do;
16320               filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16321               %include temp;
16322               filename temp;
16323               %score;
16324            %end;
16325            %else
16326            %if %upcase(&EM_ACTION) = REPORT %then %do;
16327               filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16328               %include temp;
16329               filename temp;
16330               %report;
16331            %end;
16332            %else
16333            %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16334               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16335               %include temp;
16336               filename temp;
16337               %openvariableset;
16338            %end;
16339            %else
16340            %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16341               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16342               %include temp;
16343               filename temp;
16344               %closevariableset;
16345            %end;
16346      %mend main;
16347      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emsamp.Fimport_update.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_UPDATE.SOURCE.
16348     +%macro update;
16349     +    %let oldrole = %str();
16350     +    data _null_;
16351     +       set &em_data_exportset;
16352     +       where NODEPORT='TRAIN';
16353     +       call symput('oldrole', ROLE);
16354     +    run;
16355     +    %if &oldrole ne &em_property_role %then %do;
16356     +        data &em_data_exportset;
16357     +           set &em_data_exportset;
16358     +           if NODEPORT='TRAIN' then do;
16359     +              ROLE="&em_property_role";
16360     +              NEEDUPDATE='Y';
16361     +              EXPORT='Y';
16362     +           end;
16363     +        run;
16364     +        filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16365     +        data _null_;
16366     +           file x;
16367     +           put ' ';
16368     +        run;
16369     +        filename x;
16370     +    %end;
16371     +    %else %do;
16372     +        data &em_data_exportset;
16373     +           set &em_data_exportset;
16374     +           if NODEPORT='TRAIN' then do;
16375     +              ROLE="&em_property_role";
16376     +              NEEDUPDATE='Y';
16377     +              EXPORT='Y';
16378     +           end;
16379     +        run;
16380     +    %end;
16381     +
16382     +    %em_getname(key=EMCMETADEFAULT, type=DATA);
16383     +    %if %sysfunc(exist(&em_user_emcmetadefault)) and ^%sysfunc(exist(&em_lib..&em_nodeid._CMETA_TRAIN)) %then %do;
16384     +        data &em_lib..&em_nodeid._CMETA_TRAIN;
16385     +           set &em_user_emcmetadefault;
16386     +           drop DROP;
16387     +           where DROP='N';
16388     +        run;
16389     +    %end;
16390     +
16391     +%mend update;
16392     +
16393     +
16394     +
16395     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(UPDATE):   data _null_;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   where NODEPORT='TRAIN';
MPRINT(UPDATE):   call symput('oldrole', ROLE);
MPRINT(UPDATE):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
      WHERE NODEPORT='TRAIN';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):   data EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   if NODEPORT='TRAIN' then do;
MPRINT(UPDATE):   ROLE="TRAIN";
MPRINT(UPDATE):   NEEDUPDATE='Y';
MPRINT(UPDATE):   EXPORT='Y';
MPRINT(UPDATE):   end;
MPRINT(UPDATE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16396      *------------------------------------------------------------*;
16397      * End UPDATE: FIMPORT;
16398      *------------------------------------------------------------*;

16399      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\FIMPORT\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16401      %let _HPDMGRIDHOST=;
16402      %let _HPDMGRIDINSTALLLOC=;
16403      %let _HPDMGRIDDATASERVER=;
16404      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* FIMPORT : End update 
* datetime : 19NOV2018:23:46:05 
* 
*------------------------------------------------------------* 
16405      %em_getactionstatus(emlib =EMWS1, nodeid=FIMPORT);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16406      %let em_Train = Y;
16407      %let em_Report = Y;
16408      %let em_Score = Y;
16409      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16410      %let emloopmode =;
16411      %let emloopnumber =0;
16412      %let emloopId =FIMPORT;
*------------------------------------------------------------* 
* 
* FIMPORT : Running 
* datetime : 19NOV2018:23:46:05 
* 
*------------------------------------------------------------* 
16413      %let SYSCC =0;
16414      %let EMGROUPMODE =;
16415      %let EMGROUPID =;
MPRINT(EM_DIAGRAM):      filename temp catalog 'sashelp.emutil.em_vardist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_classdist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checksetinit.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checkerror.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odsliston.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odslistoff.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_getvarname.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    filename L3N9ZNEI "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\FIMPORT\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto log=L3N9ZNEI new;
MPRINT(EM_DIAGRAM):   run;
