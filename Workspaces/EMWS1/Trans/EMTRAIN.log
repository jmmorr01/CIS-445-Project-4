MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:48:01" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 19, 2018
Time:                23:48:01
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0R2K8MF "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0R2K8MF new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:48:01" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:48:01" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
95645      proc freq data=EMWS1.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Trans_VariableSet noprint;
95646      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
95647      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

95648      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
95649      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
95650      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
95651      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
95652      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
95653      run;

NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 38.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

95654      title10;
MPRINT(EM_DIAGRAM):   title10;
95655      data WORK.M2YFYRD9;
MPRINT(EM_DIAGRAM):    data WORK.M2YFYRD9;
95656      set WORK.M2YFYRD9;
MPRINT(EM_DIAGRAM):   set WORK.M2YFYRD9;
95657      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
95658      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M2YFYRD9.
NOTE: The data set WORK.M2YFYRD9 has 11 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS1.Varsel_TRAIN;
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: There were 193 observations read from the data set EMWS1.FILTER_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
95723      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
95724      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
95725      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95726      data WORK.M0PNDESH;
MPRINT(EM_DIAGRAM):   data WORK.M0PNDESH;
95727      set WORK.M0PNDESH;
MPRINT(EM_DIAGRAM):   set WORK.M0PNDESH;
95728      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
95729      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M0PNDESH.
NOTE: The data set WORK.M0PNDESH has 11 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

95730      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
95731      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
95732      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
95733      %macro DMDBClass;
95734          BasementType(ASC) CentralAir(ASC) G_ConstructionType(ASC)
95735      %mend DMDBClass;
95736      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
95737      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
95738      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
95739      %macro DMDBVar;
95740          Age Basement Baths FirePlace GarageSize SalePrice SecondFloor TotalArea
95741      %mend DMDBVar;
95742      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95743      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
95744      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95745      proc dmdb batch data=EMWS1.Varsel_TRAIN
95746      dmdbcat=WORK.EM_DMDB
95747      classout=WORK.Transclassout
95748      maxlevel = 513
95749      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Varsel_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
95750      class %DMDBClass;
MPRINT(DMDBCLASS):   BasementType(ASC) CentralAir(ASC) G_ConstructionType(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
95751      var %DMDBVar;
MPRINT(DMDBVAR):   Age Basement Baths FirePlace GarageSize SalePrice SecondFloor TotalArea
MPRINT(EM_DIAGRAM):  ;
95752      target
95753      SalePrice
95754      ;
MPRINT(EM_DIAGRAM):   target SalePrice ;
95755      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 193   Memory used = 511K.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
NOTE: There were 193 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 193 observations read from the data set EMWS1.VARSEL_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 7 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
95756      quit;
95757      *--- end code ---*;

95758      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
95759      set WORK.M2YFYRD9;
MPRINT(EM_DIAGRAM):   set WORK.M2YFYRD9;
95760      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
95761      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M2YFYRD9.
NOTE: The data set WORK.TRANSINTERVALMETA has 8 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

95762      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
95763      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
95764      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95765      data WORK.M1JH5EMF;
MPRINT(EM_DIAGRAM):   data WORK.M1JH5EMF;
95766      set WORK.M1JH5EMF;
MPRINT(EM_DIAGRAM):   set WORK.M1JH5EMF;
95767      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
95768      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M1JH5EMF.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M1JH5EMF has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------* 
*  Trans: Equalize transformation requires a class target variable.  Transformation will be ignored. 
*------------------------------------------------------------* 
*------------------------------------------------------------* 
*  Trans: Optimize equalize max. transformation requires a class target variable.  Transformation will be ignored. 
*------------------------------------------------------------* 
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.43 seconds
      cpu time            0.28 seconds
      
95771      %exploreSample(DATA=EMWS1.Varsel_TRAIN, OUTPUT=EMWS1.Trans_SAMPLE_DATA, METADATA=EMWS1.Varsel_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):     
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
95772     +/*------------------------------------------------------------------
95773     +  MACRO EXPLOREOBS
95774     +
95775     +  SUPPORT:  SASDHD - David Duling
95776     +  PRODUCT:  Enterprise Miner
95777     +
95778     +  DESCRIPTION:
95779     +  Generates maximum and default numbers of observations to
95780     +  download for visualization depending on the record length.
95781     +
95782     +  Values were determined by trial and error using typical
95783     +  Windows workstation configurations.
95784     +
95785     +  Discrete sets of values are returned so that user experience
95786     +  will be consitent with similar sized data sets.
95787     +
95788     +  These macro variables are set:
95789     +  _exploreobs_max -- maximum number of obs downloadable
95790     +  _exploreobs_def -- default number of obs to be downloaded
95791     +  _exploreobs_recl - record length.  Might be useful for reporting.
95792     +
95793     +  Use the _exploreobs_max to set limit the GUI selection of
95794     +  observations for downloading.  The GUI selection for obs
95795     +  could be reduced to "Default" and "Max".
95796     +
95797     +  Parameters
95798     +  data=   libname.memname of input data
95799     +  vars=   subset list of variables.
95800     +          downloading 1 out of 500 really does work like downloading
95801     +          1 out of 1 vars.  Users may select a subset of vars for
95802     +                   visualizations.  Pass in the list as space delimited
95803     +          var names.  If vars is not specified, the record length
95804     +          of the entire data will be used.
95805     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
95806     +
95807     +  Control
95808     +  Users may control the values by entering these macro variables.
95809     +            EM_EXPLOREOBS_MAX
95810     +            EM_EXPLOREOBS_DEFAULT
95811     +  These values override the computed values.
95812     +
95813     +  Debugging
95814     +  %let _exploreobs_debug=1 ;
95815     +--------------------------------------------------------------------
95816     +  HISTORY: 20APR2004. sasdhd. pushed.
95817     +           18DEC2004. sasdhd. S0280556.
95818     +           07SEP2007. sasdhd. HK1009586
95819     +--------------------------------------------------------------------*/
95820     +
95821     +%macro exploreobs(data=,vars=, nbytes=) ;
95822     +
95823     +   /*--- variable definitions ---*/
95824     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
95825     +   %local xobs xvars xlen vlen xi vname vlist ;
95826     +   %local _exp_source _exp_notes ;
95827     +
95828     +   /*--- USER definitions ---*/
95829     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
95830     +
95831     +   /*--- variable intializations ---*/
95832     +   %let _exploreobs_max=0 ;
95833     +   %let _exploreobs_def=0 ;
95834     +   %let _exploreobs_recl=0 ;
95835     +   %let xvars= 0 ;
95836     +   %let xlen = 0 ;
95837     +   %let xobs = 0 ;
95838     +
95839     +   /*--- data error checks ---*/
95840     +   %if "&data" eq "" %then %do ;
95841     +            %put NOTE: DATA is not specified. ;
95842     +            %goto term ;
95843     +      %end ;
95844     +
95845     +   %let dsid=%sysfunc(open(&data)) ;
95846     +   %if not &dsid %then %do ;
95847     +            %put NOTE: DATA &data is not available. ;
95848     +            %goto term ;
95849     +      %end ;
95850     +
95851     +   /*--- if a vars list exists generate a subset ---*/
95852     +   %if &vars ne %then %do ;
95853     +         %let dsid=%sysfunc(close(&dsid)) ;
95854     +         %if &_exploreobs_debug ne 1 %then %do ;
95855     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
95856     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
95857     +                  options nosource nonotes ;
95858     +         %end ;
95859     +         data _exploreobs_temp_data ;
95860     +         set &data(obs=0) ;
95861     +          keep &vars ;
95862     +         run;
95863     +         %if &_exploreobs_debug ne 1 %then %do ;
95864     +                  options &_exp_source &_exp_notes ;
95865     +         %end ;
95866     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
95867     +         %if &dsid eq 0 %then %do ;
95868     +                  %put NOTE: Sample is not available.;
95869     +                  %goto term ;
95870     +            %end ;
95871     +      %end ;
95872     +
95873     +   /*--- get var attributes ---*/
95874     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
95875     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
95876     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
95877     +   %let dsid= %sysfunc(close(&dsid)) ;
95878     +
95879     +   /*--- set default and max obs ---*/
95880     +   %let _exploreobs_recl=%eval(&xlen) ;
95881     +   %if &_exploreobs_recl eq 0 %then %do ;
95882     +             %let _exploreobs_max= 0 ;
95883     +             %let _exploreobs_def= 0 ;
95884     +             %goto term ;
95885     +
95886     +   %end ;
95887     +   %else
95888     +   %if &_exploreobs_recl le 32 %then %do ;
95889     +             %let _exploreobs_max=100000 ;
95890     +             %let _exploreobs_def= 10000 ;
95891     +   %end ;
95892     +   %else
95893     +   %if &_exploreobs_recl le 128 %then %do ;
95894     +             %let _exploreobs_max=60000 ;
95895     +             %let _exploreobs_def= 6000 ;
95896     +   %end ;
95897     +   %else
95898     +   %if &_exploreobs_recl lt 1000 %then %do ;
95899     +             %let _exploreobs_max=20000 ;
95900     +             %let _exploreobs_def= 2000 ;
95901     +   %end ;
95902     +   %else
95903     +   %if &_exploreobs_recl lt 5000 %then %do ;
95904     +             %let _exploreobs_max= 10000 ;
95905     +             %let _exploreobs_def=  1000 ;
95906     +   %end ;
95907     +   %else
95908     +   %if &_exploreobs_recl lt 20000 %then %do ;
95909     +             %let _exploreobs_max= 5000 ;
95910     +             %let _exploreobs_def=  500 ;
95911     +   %end ;
95912     +   %else %do ;
95913     +             %let _exploreobs_max= 1000 ;
95914     +             %let _exploreobs_def=  200 ;
95915     +   %end ;
95916     +
95917     +   /*--- Users options ---*/
95918     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
95919     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
95920     +   %end;
95921     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
95922     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
95923     +   %end;
95924     +
95925     +    /*--- S0868273 ---*/
95926     +    %if "&NBYTES" ne "" %then %do;
95927     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
95928     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
95929     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
95930     +       %end;
95931     +
95932     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
95933     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
95934     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
95935     +          %if ^&_exploreobs_def %then
95936     +              %let _exploreobs_def = 1;
95937     +
95938     +       %end;
95939     +    %end;
95940     +
95941     +   /*--- Terminate ---*/
95942     +   %term:
95943     +
95944     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
95945     +%mend ;
95946     +
95947     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.Varsel_TRAIN : vars= 20 : recl= 156 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS1.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS1.Varsel_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
      
NOTE: There were 193 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 193 observations read from the data set EMWS1.VARSEL_TRAIN.
NOTE: The data set EMWS1.TRANS_SAMPLE_DATA has 193 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
