MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:49:33" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 19, 2018
Time:                23:49:33
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2BXA3GD "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2BXA3GD new;
MPRINT(EM_DIAGRAM):   run;
148082     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
148083     set EMWS1.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_OUTKEY;
148084     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
148085     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

148086     filename emflow "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148087     *------------------------------------------------------------*;
148088     * Neural: Scoring DATA data;
148089     *------------------------------------------------------------*;
148090     data EMWS1.Neural_TRAIN
148091     / view=EMWS1.Neural_TRAIN
148092     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_TRAIN / view=EMWS1.Neural_TRAIN ;
148093     set EMWS1.BINNING_TRAIN
148094     ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN ;
148095     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
148096    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
148097    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
148098    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
148099    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
148100    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
148101    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
148102    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
148103    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
148104    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
148105    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
148106    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
148107    +LENGTH _WARN_ $4
148108    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
148109    +      label GRP_Age2 = 'Dummy: GRP_Age=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Age2 = 'Dummy: GRP_Age=2' ;
148110    +
148111    +      label GRP_Age3 = 'Dummy: GRP_Age=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Age3 = 'Dummy: GRP_Age=3' ;
148112    +
148113    +      label GRP_Age4 = 'Dummy: GRP_Age=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Age4 = 'Dummy: GRP_Age=4' ;
148114    +
148115    +      label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
148116    +
148117    +      label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
148118    +
148119    +      label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
148120    +
148121    +      label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
MPRINT(EM_DIAGRAM):   label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
148122    +
148123    +      label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
MPRINT(EM_DIAGRAM):   label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
148124    +
148125    +      label GRP_G_ConstructionType2 = 'Dummy: GRP_G_ConstructionType=2' ;
MPRINT(EM_DIAGRAM):   label GRP_G_ConstructionType2 = 'Dummy: GRP_G_ConstructionType=2' ;
148126    +
148127    +      label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
MPRINT(EM_DIAGRAM):   label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
148128    +
148129    +      label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
148130    +
148131    +      label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
148132    +
148133    +      label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
148134    +
148135    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
148136    +
148137    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
148138    +
148139    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
148140    +
148141    +      label P_SalePrice = 'Predicted: SalePrice' ;
MPRINT(EM_DIAGRAM):   label P_SalePrice = 'Predicted: SalePrice' ;
148142    +
148143    +      label R_SalePrice = 'Residual: SalePrice' ;
MPRINT(EM_DIAGRAM):   label R_SalePrice = 'Residual: SalePrice' ;
148144    +
148145    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
148146    +
148147    +*** Generate dummy variables for GRP_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Age ;
148148    +drop GRP_Age2 GRP_Age3 GRP_Age4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Age2 GRP_Age3 GRP_Age4 ;
148149    +if missing( GRP_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Age ) then do;
148150    +   GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
148151    +   GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
148152    +   GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
148153    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148154    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148155    +end;
MPRINT(EM_DIAGRAM):   end;
148156    +else do;
MPRINT(EM_DIAGRAM):   else do;
148157    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148158    +   _dm12 = put( GRP_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Age , BEST12. );
148159    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148160    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
148161    +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
148162    +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
148163    +      GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = 0.63245553203367;
148164    +   end;
MPRINT(EM_DIAGRAM):   end;
148165    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148166    +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
148167    +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
148168    +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
148169    +   end;
MPRINT(EM_DIAGRAM):   end;
148170    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148171    +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
148172    +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
148173    +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
148174    +   end;
MPRINT(EM_DIAGRAM):   end;
148175    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148176    +      GRP_Age2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = -0.63245553203367;
148177    +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
148178    +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
148179    +   end;
MPRINT(EM_DIAGRAM):   end;
148180    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148181    +      GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
148182    +      GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
148183    +      GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
148184    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148185    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148186    +   end;
MPRINT(EM_DIAGRAM):   end;
148187    +end;
MPRINT(EM_DIAGRAM):   end;
148188    +
148189    +*** Generate dummy variables for GRP_BasementType ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_BasementType ;
148190    +drop GRP_BasementType2 GRP_BasementType3 ;
MPRINT(EM_DIAGRAM):   drop GRP_BasementType2 GRP_BasementType3 ;
148191    +if missing( GRP_BasementType ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_BasementType ) then do;
148192    +   GRP_BasementType2 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
148193    +   GRP_BasementType3 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
148194    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148195    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148196    +end;
MPRINT(EM_DIAGRAM):   end;
148197    +else do;
MPRINT(EM_DIAGRAM):   else do;
148198    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148199    +   _dm12 = put( GRP_BasementType , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_BasementType , BEST12. );
148200    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148201    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
148202    +      GRP_BasementType2 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = -0.75;
148203    +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
148204    +   end;
MPRINT(EM_DIAGRAM):   end;
148205    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148206    +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
148207    +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
148208    +   end;
MPRINT(EM_DIAGRAM):   end;
148209    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148210    +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
148211    +      GRP_BasementType3 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = 0.75;
148212    +   end;
MPRINT(EM_DIAGRAM):   end;
148213    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148214    +      GRP_BasementType2 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
148215    +      GRP_BasementType3 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
148216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148218    +   end;
MPRINT(EM_DIAGRAM):   end;
148219    +end;
MPRINT(EM_DIAGRAM):   end;
148220    +
148221    +*** Generate dummy variables for GRP_Baths ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Baths ;
148222    +drop GRP_Baths3 ;
MPRINT(EM_DIAGRAM):   drop GRP_Baths3 ;
148223    +if missing( GRP_Baths ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Baths ) then do;
148224    +   GRP_Baths3 = .;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
148225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148227    +end;
MPRINT(EM_DIAGRAM):   end;
148228    +else do;
MPRINT(EM_DIAGRAM):   else do;
148229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148230    +   _dm12 = put( GRP_Baths , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Baths , BEST12. );
148231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148232    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
148233    +      GRP_Baths3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = -1;
148234    +   end;
MPRINT(EM_DIAGRAM):   end;
148235    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148236    +      GRP_Baths3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = 1;
148237    +   end;
MPRINT(EM_DIAGRAM):   end;
148238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148239    +      GRP_Baths3 = .;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
148240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148242    +   end;
MPRINT(EM_DIAGRAM):   end;
148243    +end;
MPRINT(EM_DIAGRAM):   end;
148244    +
148245    +*** Generate dummy variables for GRP_CentralAir ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_CentralAir ;
148246    +drop GRP_CentralAir2 ;
MPRINT(EM_DIAGRAM):   drop GRP_CentralAir2 ;
148247    +if missing( GRP_CentralAir ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_CentralAir ) then do;
148248    +   GRP_CentralAir2 = .;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
148249    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148250    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148251    +end;
MPRINT(EM_DIAGRAM):   end;
148252    +else do;
MPRINT(EM_DIAGRAM):   else do;
148253    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148254    +   _dm12 = put( GRP_CentralAir , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_CentralAir , BEST12. );
148255    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148256    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
148257    +      GRP_CentralAir2 = -1;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = -1;
148258    +   end;
MPRINT(EM_DIAGRAM):   end;
148259    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148260    +      GRP_CentralAir2 = 1;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = 1;
148261    +   end;
MPRINT(EM_DIAGRAM):   end;
148262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148263    +      GRP_CentralAir2 = .;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
148264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148266    +   end;
MPRINT(EM_DIAGRAM):   end;
148267    +end;
MPRINT(EM_DIAGRAM):   end;
148268    +
148269    +*** Generate dummy variables for GRP_FirePlace ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_FirePlace ;
148270    +drop GRP_FirePlace2 ;
MPRINT(EM_DIAGRAM):   drop GRP_FirePlace2 ;
148271    +if missing( GRP_FirePlace ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_FirePlace ) then do;
148272    +   GRP_FirePlace2 = .;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
148273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148275    +end;
MPRINT(EM_DIAGRAM):   end;
148276    +else do;
MPRINT(EM_DIAGRAM):   else do;
148277    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148278    +   _dm12 = put( GRP_FirePlace , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_FirePlace , BEST12. );
148279    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148280    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
148281    +      GRP_FirePlace2 = 1;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = 1;
148282    +   end;
MPRINT(EM_DIAGRAM):   end;
148283    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148284    +      GRP_FirePlace2 = -1;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = -1;
148285    +   end;
MPRINT(EM_DIAGRAM):   end;
148286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148287    +      GRP_FirePlace2 = .;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
148288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148290    +   end;
MPRINT(EM_DIAGRAM):   end;
148291    +end;
MPRINT(EM_DIAGRAM):   end;
148292    +
148293    +*** Generate dummy variables for GRP_G_ConstructionType ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_G_ConstructionType ;
148294    +drop GRP_G_ConstructionType2 ;
MPRINT(EM_DIAGRAM):   drop GRP_G_ConstructionType2 ;
148295    +if missing( GRP_G_ConstructionType ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_G_ConstructionType ) then do;
148296    +   GRP_G_ConstructionType2 = .;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = .;
148297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148299    +end;
MPRINT(EM_DIAGRAM):   end;
148300    +else do;
MPRINT(EM_DIAGRAM):   else do;
148301    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148302    +   _dm12 = put( GRP_G_ConstructionType , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_G_ConstructionType , BEST12. );
148303    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148304    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
148305    +      GRP_G_ConstructionType2 = -1;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = -1;
148306    +   end;
MPRINT(EM_DIAGRAM):   end;
148307    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148308    +      GRP_G_ConstructionType2 = 1;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = 1;
148309    +   end;
MPRINT(EM_DIAGRAM):   end;
148310    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148311    +      GRP_G_ConstructionType2 = .;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = .;
148312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148314    +   end;
MPRINT(EM_DIAGRAM):   end;
148315    +end;
MPRINT(EM_DIAGRAM):   end;
148316    +
148317    +*** Generate dummy variables for GRP_GarageSize ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_GarageSize ;
148318    +drop GRP_GarageSize2 ;
MPRINT(EM_DIAGRAM):   drop GRP_GarageSize2 ;
148319    +if missing( GRP_GarageSize ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_GarageSize ) then do;
148320    +   GRP_GarageSize2 = .;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
148321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148323    +end;
MPRINT(EM_DIAGRAM):   end;
148324    +else do;
MPRINT(EM_DIAGRAM):   else do;
148325    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148326    +   _dm12 = put( GRP_GarageSize , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_GarageSize , BEST12. );
148327    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148328    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
148329    +      GRP_GarageSize2 = 1;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = 1;
148330    +   end;
MPRINT(EM_DIAGRAM):   end;
148331    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148332    +      GRP_GarageSize2 = -1;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = -1;
148333    +   end;
MPRINT(EM_DIAGRAM):   end;
148334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148335    +      GRP_GarageSize2 = .;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
148336    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148337    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148338    +   end;
MPRINT(EM_DIAGRAM):   end;
148339    +end;
MPRINT(EM_DIAGRAM):   end;
148340    +
148341    +*** Generate dummy variables for GRP_TotalArea ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_TotalArea ;
148342    +drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
148343    +if missing( GRP_TotalArea ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_TotalArea ) then do;
148344    +   GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
148345    +   GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
148346    +   GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
148347    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148348    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148349    +end;
MPRINT(EM_DIAGRAM):   end;
148350    +else do;
MPRINT(EM_DIAGRAM):   else do;
148351    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148352    +   _dm12 = put( GRP_TotalArea , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_TotalArea , BEST12. );
148353    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148354    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
148355    +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
148356    +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
148357    +      GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = 0.63245553203367;
148358    +   end;
MPRINT(EM_DIAGRAM):   end;
148359    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148360    +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
148361    +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
148362    +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
148363    +   end;
MPRINT(EM_DIAGRAM):   end;
148364    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148365    +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
148366    +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
148367    +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
148368    +   end;
MPRINT(EM_DIAGRAM):   end;
148369    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148370    +      GRP_TotalArea2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = -0.63245553203367;
148371    +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
148372    +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
148373    +   end;
MPRINT(EM_DIAGRAM):   end;
148374    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148375    +      GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
148376    +      GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
148377    +      GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
148378    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148379    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148380    +   end;
MPRINT(EM_DIAGRAM):   end;
148381    +end;
MPRINT(EM_DIAGRAM):   end;
148382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148383    +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
148384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148386    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
148387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148388    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148389    +   H11  =  1.0000000827403E-10 * GRP_Age2  +  1.0000000133514E-10 * GRP_Age3
148390    +          +  9.9999994396249E-11 * GRP_Age4  +     2.19396277615857 *
148391    +        GRP_BasementType2  +  1.0000000133514E-10 * GRP_BasementType3
148392    +          +  1.0000000827403E-10 * GRP_Baths3  +  1.0000000827403E-10 *
148393    +        GRP_CentralAir2  +     3.64853941128541 * GRP_FirePlace2
148394    +          +     1.37409899652201 * GRP_G_ConstructionType2
148395    +          +     3.57351607059962 * GRP_GarageSize2  +  9.9999994396249E-11 *
148396    +        GRP_TotalArea2  +     0.48701596702829 * GRP_TotalArea3
148397    +          +     2.14977038627574 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.0000000827403E-10 * GRP_Age2 + 1.0000000133514E-10 * GRP_Age3 + 9.9999994396249E-11 * GRP_Age4 + 2.19396277615857 * GRP_BasementType2 + 1.0000000133514E-10 * GRP_BasementType3 + 1.0000000827403E-10 * GRP_Baths3 + 
1.0000000827403E-10 * GRP_CentralAir2 + 3.64853941128541 * GRP_FirePlace2 + 1.37409899652201 * GRP_G_ConstructionType2 + 3.57351607059962 * GRP_GarageSize2 + 9.9999994396249E-11 * GRP_TotalArea2 + 0.48701596702829 * GRP_TotalArea3 + 2.14977038627574 * 
GRP_TotalArea4 ;
148398    +   H12  =     2.14644805112317 * GRP_Age2  +     1.95097720078181 * GRP_Age3
148399    +          +     1.80244898009527 * GRP_Age4  +  1.0000000133514E-10 *
148400    +        GRP_BasementType2  +     3.63636443206898 * GRP_BasementType3
148401    +          +      1.8636611423261 * GRP_Baths3  +     2.50819958872812 *
148402    +        GRP_CentralAir2  +     0.16862606040283 * GRP_FirePlace2
148403    +          +     1.77302094819769 * GRP_G_ConstructionType2
148404    +          +     2.00573259561136 * GRP_GarageSize2  +     1.87643150853497 *
148405    +        GRP_TotalArea2  +     0.63611591670256 * GRP_TotalArea3
148406    +          +      5.1442801895614 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H12 = 2.14644805112317 * GRP_Age2 + 1.95097720078181 * GRP_Age3 + 1.80244898009527 * GRP_Age4 + 1.0000000133514E-10 * GRP_BasementType2 + 3.63636443206898 * GRP_BasementType3 + 1.8636611423261 * GRP_Baths3 + 2.50819958872812 * 
GRP_CentralAir2 + 0.16862606040283 * GRP_FirePlace2 + 1.77302094819769 * GRP_G_ConstructionType2 + 2.00573259561136 * GRP_GarageSize2 + 1.87643150853497 * GRP_TotalArea2 + 0.63611591670256 * GRP_TotalArea3 + 5.1442801895614 * GRP_TotalArea4 ;
148407    +   H13  =     3.60834251768799 * GRP_Age2  +     3.65802377108976 * GRP_Age3
148408    +          +     0.26646016438357 * GRP_Age4  +     4.65567435778378 *
148409    +        GRP_BasementType2  +     2.42262006695455 * GRP_BasementType3
148410    +          +     0.74257823114779 * GRP_Baths3  +     4.00716045002316 *
148411    +        GRP_CentralAir2  +  9.9999999600419E-11 * GRP_FirePlace2
148412    +          +     0.64476276754776 * GRP_G_ConstructionType2
148413    +          +  1.0000000827403E-10 * GRP_GarageSize2  +     0.99450944137347 *
148414    +        GRP_TotalArea2  +  1.0000000827403E-10 * GRP_TotalArea3
148415    +          +  1.0000000827403E-10 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H13 = 3.60834251768799 * GRP_Age2 + 3.65802377108976 * GRP_Age3 + 0.26646016438357 * GRP_Age4 + 4.65567435778378 * GRP_BasementType2 + 2.42262006695455 * GRP_BasementType3 + 0.74257823114779 * GRP_Baths3 + 4.00716045002316 * 
GRP_CentralAir2 + 9.9999999600419E-11 * GRP_FirePlace2 + 0.64476276754776 * GRP_G_ConstructionType2 + 1.0000000827403E-10 * GRP_GarageSize2 + 0.99450944137347 * GRP_TotalArea2 + 1.0000000827403E-10 * GRP_TotalArea3 + 1.0000000827403E-10 * GRP_TotalArea4 ;
148416    +   H11  =     -2.6624082873868 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.6624082873868 + H11 ;
148417    +   H12  =    -4.28162750216268 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.28162750216268 + H12 ;
148418    +   H13  =     8.75076195644127 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 8.75076195644127 + H13 ;
148419    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
148420    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
148421    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
148422    +END;
MPRINT(EM_DIAGRAM):   END;
148423    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148424    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
148425    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
148426    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
148427    +END;
MPRINT(EM_DIAGRAM):   END;
148428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148429    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
148430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148431    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148432    +   P_SalePrice  =     3879.47192918675 * H11  +     2703.68234836976 * H12
148433    +          +    -2295.13126581828 * H13 ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 3879.47192918675 * H11 + 2703.68234836976 * H12 + -2295.13126581828 * H13 ;
148434    +   P_SalePrice  =     77619.9928694919 + P_SalePrice ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 77619.9928694919 + P_SalePrice ;
148435    +END;
MPRINT(EM_DIAGRAM):   END;
148436    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148437    +   P_SalePrice  = .;
MPRINT(EM_DIAGRAM):   P_SalePrice = .;
148438    +END;
MPRINT(EM_DIAGRAM):   END;
148439    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
148440    +   P_SalePrice  =     75017.5647668393;
MPRINT(EM_DIAGRAM):   P_SalePrice = 75017.5647668393;
148441    +END;
MPRINT(EM_DIAGRAM):   END;
148442    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
148443    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
148444    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
148445    +IF MISSING( SalePrice ) THEN R_SalePrice  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SalePrice ) THEN R_SalePrice = . ;
148446    +ELSE R_SalePrice  = SalePrice  - P_SalePrice ;
MPRINT(EM_DIAGRAM):   ELSE R_SalePrice = SalePrice - P_SalePrice ;
148447    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
148448    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
148449    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
148450    +drop
148451    +H11
148452    +H12
148453    +H13
148454    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
148455     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
148456     quit;
148457     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
148458     filename emflow "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
148459     *------------------------------------------------------------*;
148460     * Neural: Scoring VALIDATE data;
148461     *------------------------------------------------------------*;
148462     data EMWS1.Neural_VALIDATE
148463     / view=EMWS1.Neural_VALIDATE
148464     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_VALIDATE / view=EMWS1.Neural_VALIDATE ;
148465     set EMWS1.BINNING_VALIDATE
148466     ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_VALIDATE ;
148467     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
148468    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
148469    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
148470    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
148471    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
148472    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
148473    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
148474    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
148475    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
148476    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
148477    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
148478    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
148479    +LENGTH _WARN_ $4
148480    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
148481    +      label GRP_Age2 = 'Dummy: GRP_Age=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Age2 = 'Dummy: GRP_Age=2' ;
148482    +
148483    +      label GRP_Age3 = 'Dummy: GRP_Age=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Age3 = 'Dummy: GRP_Age=3' ;
148484    +
148485    +      label GRP_Age4 = 'Dummy: GRP_Age=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Age4 = 'Dummy: GRP_Age=4' ;
148486    +
148487    +      label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
148488    +
148489    +      label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
148490    +
148491    +      label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
148492    +
148493    +      label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
MPRINT(EM_DIAGRAM):   label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
148494    +
148495    +      label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
MPRINT(EM_DIAGRAM):   label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
148496    +
148497    +      label GRP_G_ConstructionType2 = 'Dummy: GRP_G_ConstructionType=2' ;
MPRINT(EM_DIAGRAM):   label GRP_G_ConstructionType2 = 'Dummy: GRP_G_ConstructionType=2' ;
148498    +
148499    +      label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
MPRINT(EM_DIAGRAM):   label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
148500    +
148501    +      label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
148502    +
148503    +      label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
148504    +
148505    +      label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
148506    +
148507    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
148508    +
148509    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
148510    +
148511    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
148512    +
148513    +      label P_SalePrice = 'Predicted: SalePrice' ;
MPRINT(EM_DIAGRAM):   label P_SalePrice = 'Predicted: SalePrice' ;
148514    +
148515    +      label R_SalePrice = 'Residual: SalePrice' ;
MPRINT(EM_DIAGRAM):   label R_SalePrice = 'Residual: SalePrice' ;
148516    +
148517    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
148518    +
148519    +*** Generate dummy variables for GRP_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Age ;
148520    +drop GRP_Age2 GRP_Age3 GRP_Age4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Age2 GRP_Age3 GRP_Age4 ;
148521    +if missing( GRP_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Age ) then do;
148522    +   GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
148523    +   GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
148524    +   GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
148525    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148526    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148527    +end;
MPRINT(EM_DIAGRAM):   end;
148528    +else do;
MPRINT(EM_DIAGRAM):   else do;
148529    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148530    +   _dm12 = put( GRP_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Age , BEST12. );
148531    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148532    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
148533    +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
148534    +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
148535    +      GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = 0.63245553203367;
148536    +   end;
MPRINT(EM_DIAGRAM):   end;
148537    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148538    +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
148539    +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
148540    +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
148541    +   end;
MPRINT(EM_DIAGRAM):   end;
148542    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148543    +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
148544    +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
148545    +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
148546    +   end;
MPRINT(EM_DIAGRAM):   end;
148547    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148548    +      GRP_Age2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = -0.63245553203367;
148549    +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
148550    +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
148551    +   end;
MPRINT(EM_DIAGRAM):   end;
148552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148553    +      GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
148554    +      GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
148555    +      GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
148556    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148557    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148558    +   end;
MPRINT(EM_DIAGRAM):   end;
148559    +end;
MPRINT(EM_DIAGRAM):   end;
148560    +
148561    +*** Generate dummy variables for GRP_BasementType ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_BasementType ;
148562    +drop GRP_BasementType2 GRP_BasementType3 ;
MPRINT(EM_DIAGRAM):   drop GRP_BasementType2 GRP_BasementType3 ;
148563    +if missing( GRP_BasementType ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_BasementType ) then do;
148564    +   GRP_BasementType2 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
148565    +   GRP_BasementType3 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
148566    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148567    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148568    +end;
MPRINT(EM_DIAGRAM):   end;
148569    +else do;
MPRINT(EM_DIAGRAM):   else do;
148570    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148571    +   _dm12 = put( GRP_BasementType , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_BasementType , BEST12. );
148572    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148573    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
148574    +      GRP_BasementType2 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = -0.75;
148575    +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
148576    +   end;
MPRINT(EM_DIAGRAM):   end;
148577    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148578    +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
148579    +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
148580    +   end;
MPRINT(EM_DIAGRAM):   end;
148581    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148582    +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
148583    +      GRP_BasementType3 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = 0.75;
148584    +   end;
MPRINT(EM_DIAGRAM):   end;
148585    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148586    +      GRP_BasementType2 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
148587    +      GRP_BasementType3 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
148588    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148589    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148590    +   end;
MPRINT(EM_DIAGRAM):   end;
148591    +end;
MPRINT(EM_DIAGRAM):   end;
148592    +
148593    +*** Generate dummy variables for GRP_Baths ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Baths ;
148594    +drop GRP_Baths3 ;
MPRINT(EM_DIAGRAM):   drop GRP_Baths3 ;
148595    +if missing( GRP_Baths ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Baths ) then do;
148596    +   GRP_Baths3 = .;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
148597    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148598    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148599    +end;
MPRINT(EM_DIAGRAM):   end;
148600    +else do;
MPRINT(EM_DIAGRAM):   else do;
148601    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148602    +   _dm12 = put( GRP_Baths , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Baths , BEST12. );
148603    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148604    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
148605    +      GRP_Baths3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = -1;
148606    +   end;
MPRINT(EM_DIAGRAM):   end;
148607    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148608    +      GRP_Baths3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = 1;
148609    +   end;
MPRINT(EM_DIAGRAM):   end;
148610    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148611    +      GRP_Baths3 = .;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
148612    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148613    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148614    +   end;
MPRINT(EM_DIAGRAM):   end;
148615    +end;
MPRINT(EM_DIAGRAM):   end;
148616    +
148617    +*** Generate dummy variables for GRP_CentralAir ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_CentralAir ;
148618    +drop GRP_CentralAir2 ;
MPRINT(EM_DIAGRAM):   drop GRP_CentralAir2 ;
148619    +if missing( GRP_CentralAir ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_CentralAir ) then do;
148620    +   GRP_CentralAir2 = .;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
148621    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148622    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148623    +end;
MPRINT(EM_DIAGRAM):   end;
148624    +else do;
MPRINT(EM_DIAGRAM):   else do;
148625    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148626    +   _dm12 = put( GRP_CentralAir , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_CentralAir , BEST12. );
148627    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148628    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
148629    +      GRP_CentralAir2 = -1;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = -1;
148630    +   end;
MPRINT(EM_DIAGRAM):   end;
148631    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148632    +      GRP_CentralAir2 = 1;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = 1;
148633    +   end;
MPRINT(EM_DIAGRAM):   end;
148634    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148635    +      GRP_CentralAir2 = .;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
148636    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148637    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148638    +   end;
MPRINT(EM_DIAGRAM):   end;
148639    +end;
MPRINT(EM_DIAGRAM):   end;
148640    +
148641    +*** Generate dummy variables for GRP_FirePlace ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_FirePlace ;
148642    +drop GRP_FirePlace2 ;
MPRINT(EM_DIAGRAM):   drop GRP_FirePlace2 ;
148643    +if missing( GRP_FirePlace ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_FirePlace ) then do;
148644    +   GRP_FirePlace2 = .;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
148645    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148646    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148647    +end;
MPRINT(EM_DIAGRAM):   end;
148648    +else do;
MPRINT(EM_DIAGRAM):   else do;
148649    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148650    +   _dm12 = put( GRP_FirePlace , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_FirePlace , BEST12. );
148651    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148652    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
148653    +      GRP_FirePlace2 = 1;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = 1;
148654    +   end;
MPRINT(EM_DIAGRAM):   end;
148655    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148656    +      GRP_FirePlace2 = -1;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = -1;
148657    +   end;
MPRINT(EM_DIAGRAM):   end;
148658    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148659    +      GRP_FirePlace2 = .;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
148660    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148661    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148662    +   end;
MPRINT(EM_DIAGRAM):   end;
148663    +end;
MPRINT(EM_DIAGRAM):   end;
148664    +
148665    +*** Generate dummy variables for GRP_G_ConstructionType ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_G_ConstructionType ;
148666    +drop GRP_G_ConstructionType2 ;
MPRINT(EM_DIAGRAM):   drop GRP_G_ConstructionType2 ;
148667    +if missing( GRP_G_ConstructionType ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_G_ConstructionType ) then do;
148668    +   GRP_G_ConstructionType2 = .;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = .;
148669    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148670    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148671    +end;
MPRINT(EM_DIAGRAM):   end;
148672    +else do;
MPRINT(EM_DIAGRAM):   else do;
148673    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148674    +   _dm12 = put( GRP_G_ConstructionType , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_G_ConstructionType , BEST12. );
148675    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148676    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
148677    +      GRP_G_ConstructionType2 = -1;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = -1;
148678    +   end;
MPRINT(EM_DIAGRAM):   end;
148679    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148680    +      GRP_G_ConstructionType2 = 1;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = 1;
148681    +   end;
MPRINT(EM_DIAGRAM):   end;
148682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148683    +      GRP_G_ConstructionType2 = .;
MPRINT(EM_DIAGRAM):   GRP_G_ConstructionType2 = .;
148684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148686    +   end;
MPRINT(EM_DIAGRAM):   end;
148687    +end;
MPRINT(EM_DIAGRAM):   end;
148688    +
148689    +*** Generate dummy variables for GRP_GarageSize ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_GarageSize ;
148690    +drop GRP_GarageSize2 ;
MPRINT(EM_DIAGRAM):   drop GRP_GarageSize2 ;
148691    +if missing( GRP_GarageSize ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_GarageSize ) then do;
148692    +   GRP_GarageSize2 = .;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
148693    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148694    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148695    +end;
MPRINT(EM_DIAGRAM):   end;
148696    +else do;
MPRINT(EM_DIAGRAM):   else do;
148697    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148698    +   _dm12 = put( GRP_GarageSize , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_GarageSize , BEST12. );
148699    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148700    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
148701    +      GRP_GarageSize2 = 1;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = 1;
148702    +   end;
MPRINT(EM_DIAGRAM):   end;
148703    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148704    +      GRP_GarageSize2 = -1;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = -1;
148705    +   end;
MPRINT(EM_DIAGRAM):   end;
148706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148707    +      GRP_GarageSize2 = .;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
148708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148710    +   end;
MPRINT(EM_DIAGRAM):   end;
148711    +end;
MPRINT(EM_DIAGRAM):   end;
148712    +
148713    +*** Generate dummy variables for GRP_TotalArea ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_TotalArea ;
148714    +drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
148715    +if missing( GRP_TotalArea ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_TotalArea ) then do;
148716    +   GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
148717    +   GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
148718    +   GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
148719    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
148720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148721    +end;
MPRINT(EM_DIAGRAM):   end;
148722    +else do;
MPRINT(EM_DIAGRAM):   else do;
148723    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
148724    +   _dm12 = put( GRP_TotalArea , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_TotalArea , BEST12. );
148725    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
148726    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
148727    +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
148728    +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
148729    +      GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = 0.63245553203367;
148730    +   end;
MPRINT(EM_DIAGRAM):   end;
148731    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
148732    +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
148733    +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
148734    +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
148735    +   end;
MPRINT(EM_DIAGRAM):   end;
148736    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
148737    +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
148738    +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
148739    +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
148740    +   end;
MPRINT(EM_DIAGRAM):   end;
148741    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
148742    +      GRP_TotalArea2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = -0.63245553203367;
148743    +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
148744    +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
148745    +   end;
MPRINT(EM_DIAGRAM):   end;
148746    +   else do;
MPRINT(EM_DIAGRAM):   else do;
148747    +      GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
148748    +      GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
148749    +      GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
148750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
148751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
148752    +   end;
MPRINT(EM_DIAGRAM):   end;
148753    +end;
MPRINT(EM_DIAGRAM):   end;
148754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148755    +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
148756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148758    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
148759    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148760    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148761    +   H11  =  1.0000000827403E-10 * GRP_Age2  +  1.0000000133514E-10 * GRP_Age3
148762    +          +  9.9999994396249E-11 * GRP_Age4  +     2.19396277615857 *
148763    +        GRP_BasementType2  +  1.0000000133514E-10 * GRP_BasementType3
148764    +          +  1.0000000827403E-10 * GRP_Baths3  +  1.0000000827403E-10 *
148765    +        GRP_CentralAir2  +     3.64853941128541 * GRP_FirePlace2
148766    +          +     1.37409899652201 * GRP_G_ConstructionType2
148767    +          +     3.57351607059962 * GRP_GarageSize2  +  9.9999994396249E-11 *
148768    +        GRP_TotalArea2  +     0.48701596702829 * GRP_TotalArea3
148769    +          +     2.14977038627574 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.0000000827403E-10 * GRP_Age2 + 1.0000000133514E-10 * GRP_Age3 + 9.9999994396249E-11 * GRP_Age4 + 2.19396277615857 * GRP_BasementType2 + 1.0000000133514E-10 * GRP_BasementType3 + 1.0000000827403E-10 * GRP_Baths3 + 
1.0000000827403E-10 * GRP_CentralAir2 + 3.64853941128541 * GRP_FirePlace2 + 1.37409899652201 * GRP_G_ConstructionType2 + 3.57351607059962 * GRP_GarageSize2 + 9.9999994396249E-11 * GRP_TotalArea2 + 0.48701596702829 * GRP_TotalArea3 + 2.14977038627574 * 
GRP_TotalArea4 ;
148770    +   H12  =     2.14644805112317 * GRP_Age2  +     1.95097720078181 * GRP_Age3
148771    +          +     1.80244898009527 * GRP_Age4  +  1.0000000133514E-10 *
148772    +        GRP_BasementType2  +     3.63636443206898 * GRP_BasementType3
148773    +          +      1.8636611423261 * GRP_Baths3  +     2.50819958872812 *
148774    +        GRP_CentralAir2  +     0.16862606040283 * GRP_FirePlace2
148775    +          +     1.77302094819769 * GRP_G_ConstructionType2
148776    +          +     2.00573259561136 * GRP_GarageSize2  +     1.87643150853497 *
148777    +        GRP_TotalArea2  +     0.63611591670256 * GRP_TotalArea3
148778    +          +      5.1442801895614 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H12 = 2.14644805112317 * GRP_Age2 + 1.95097720078181 * GRP_Age3 + 1.80244898009527 * GRP_Age4 + 1.0000000133514E-10 * GRP_BasementType2 + 3.63636443206898 * GRP_BasementType3 + 1.8636611423261 * GRP_Baths3 + 2.50819958872812 * 
GRP_CentralAir2 + 0.16862606040283 * GRP_FirePlace2 + 1.77302094819769 * GRP_G_ConstructionType2 + 2.00573259561136 * GRP_GarageSize2 + 1.87643150853497 * GRP_TotalArea2 + 0.63611591670256 * GRP_TotalArea3 + 5.1442801895614 * GRP_TotalArea4 ;
148779    +   H13  =     3.60834251768799 * GRP_Age2  +     3.65802377108976 * GRP_Age3
148780    +          +     0.26646016438357 * GRP_Age4  +     4.65567435778378 *
148781    +        GRP_BasementType2  +     2.42262006695455 * GRP_BasementType3
148782    +          +     0.74257823114779 * GRP_Baths3  +     4.00716045002316 *
148783    +        GRP_CentralAir2  +  9.9999999600419E-11 * GRP_FirePlace2
148784    +          +     0.64476276754776 * GRP_G_ConstructionType2
148785    +          +  1.0000000827403E-10 * GRP_GarageSize2  +     0.99450944137347 *
148786    +        GRP_TotalArea2  +  1.0000000827403E-10 * GRP_TotalArea3
148787    +          +  1.0000000827403E-10 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H13 = 3.60834251768799 * GRP_Age2 + 3.65802377108976 * GRP_Age3 + 0.26646016438357 * GRP_Age4 + 4.65567435778378 * GRP_BasementType2 + 2.42262006695455 * GRP_BasementType3 + 0.74257823114779 * GRP_Baths3 + 4.00716045002316 * 
GRP_CentralAir2 + 9.9999999600419E-11 * GRP_FirePlace2 + 0.64476276754776 * GRP_G_ConstructionType2 + 1.0000000827403E-10 * GRP_GarageSize2 + 0.99450944137347 * GRP_TotalArea2 + 1.0000000827403E-10 * GRP_TotalArea3 + 1.0000000827403E-10 * GRP_TotalArea4 ;
148788    +   H11  =     -2.6624082873868 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.6624082873868 + H11 ;
148789    +   H12  =    -4.28162750216268 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.28162750216268 + H12 ;
148790    +   H13  =     8.75076195644127 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 8.75076195644127 + H13 ;
148791    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
148792    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
148793    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
148794    +END;
MPRINT(EM_DIAGRAM):   END;
148795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148796    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
148797    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
148798    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
148799    +END;
MPRINT(EM_DIAGRAM):   END;
148800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148801    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
148802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
148803    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
148804    +   P_SalePrice  =     3879.47192918675 * H11  +     2703.68234836976 * H12
148805    +          +    -2295.13126581828 * H13 ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 3879.47192918675 * H11 + 2703.68234836976 * H12 + -2295.13126581828 * H13 ;
148806    +   P_SalePrice  =     77619.9928694919 + P_SalePrice ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 77619.9928694919 + P_SalePrice ;
148807    +END;
MPRINT(EM_DIAGRAM):   END;
148808    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
148809    +   P_SalePrice  = .;
MPRINT(EM_DIAGRAM):   P_SalePrice = .;
148810    +END;
MPRINT(EM_DIAGRAM):   END;
148811    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
148812    +   P_SalePrice  =     75017.5647668393;
MPRINT(EM_DIAGRAM):   P_SalePrice = 75017.5647668393;
148813    +END;
MPRINT(EM_DIAGRAM):   END;
148814    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
148815    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
148816    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
148817    +IF MISSING( SalePrice ) THEN R_SalePrice  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SalePrice ) THEN R_SalePrice = . ;
148818    +ELSE R_SalePrice  = SalePrice  - P_SalePrice ;
MPRINT(EM_DIAGRAM):   ELSE R_SalePrice = SalePrice - P_SalePrice ;
148819    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
148820    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
148821    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
148822    +drop
148823    +H11
148824    +H12
148825    +H13
148826    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
148827     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
148828     quit;
148829     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
148830     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
148831     * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
148832     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural_TRAIN out=WORK.M0TAOCCP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TAOCCP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TAOCCP(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TAOCCP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TAOCCP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1TMW9GQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TMW9GQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TMW9GQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08V94CC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TMW9GQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TMW9GQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TMW9GQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TMW9GQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TMW9GQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_SALEPRICE") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_SALEPRICE") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("SALEPRICE") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
149180     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
149181     set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
149182     where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
149183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

149184     data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMINFO;
149185     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
149186     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
149187     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   run;
149191     run;
149192     data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
149193     set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
149194     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
      

149195     proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
149196     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
149197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: View EMWS1.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
