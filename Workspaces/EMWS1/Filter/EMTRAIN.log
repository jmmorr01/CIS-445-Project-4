MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:47:32" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 19, 2018
Time:                23:47:32
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O03LISS3 "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O03LISS3 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:47:32" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:47:32" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\CIS-445-Project-4-master\CIS-445-Project-4-master\Project_4\Workspaces\EMWS1\Filter\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
81421      proc freq data=EMWS1.Filter_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Filter_VariableSet noprint;
81422      table ROLE*LEVEL/out=WORK.FilterMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.FilterMETA;
81423      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS1.FILTER_VARIABLESET.
NOTE: The data set WORK.FILTERMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

81424      proc print data=WORK.FilterMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterMETA label noobs;
81425      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
81426      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
81427      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
81428      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
81429      run;

NOTE: There were 4 observations read from the data set WORK.FILTERMETA.
NOTE: The PROCEDURE PRINT printed page 27.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

81430      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M0IFW9K2;
MPRINT(EM_DIAGRAM):   set WORK.M0IFW9K2;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='STDDEV';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='MINPCT';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
81453      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
81454      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
81455     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
81456     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
81457     +       %put *** Statistics for Class variables ***;
81458     +       %put >>> DATA= &data  OUTPUT= &output;
81459     +       %put >>> VAR= &vars;
81460     +       %put >>> WHERE=  &where;
81461     +       %put >>> FREQ=  &freq;
81462     +   %end;
81463     +
81464     +      /* Process metadata data set */
81465     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
81466     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
81467     +       %let FREQ=;
81468     +       %let _nobs=0;
81469     +       data _null;
81470     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
81471     +          if eof then call symput('_nobs', put(_N_, best.));
81472     +       run;
81473     +       %if "&_nobs" ne "0" %then %do;
81474     +           data _null_;
81475     +              file _mac;
81476     +              length _VARS $80; retain _vars;
81477     +              if _n_ =1 then put '%macro _vars;';
81478     +              set &metadata end=eof;
81479     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
81480     +              if ROLE='FREQ' then call symput('FREQ', NAME);
81481     +              else do;
81482     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
81483     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
81484     +                 else do;
81485     +                    put _Vars;
81486     +                    _vars = strip(NAME);
81487     +                 end;
81488     +              end;
81489     +              if eof then do;
81490     +                 put _Vars;
81491     +                 put '%mend _vars;';
81492     +              end;
81493     +           run;
81494     +       %end;
81495     +       %else %do;
81496     +           data _null_;
81497     +              file _mac;
81498     +              put '%macro _vars;';
81499     +              put '%mend _vars;';
81500     +           run;
81501     +       %end;
81502     +   %end;
81503     +   %else %do;
81504     +       data _null_;
81505     +          file _mac;
81506     +          put '%macro _vars;';
81507     +          put '%mend _vars;';
81508     +       run;
81509     +   %end;
81510     +   %inc _mac;
81511     +   filename _mac;
81512     +
81513     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
81514     +
81515     +   /* Check if FREQ variable is in the data set */
81516     +   %if &freq ne %then %do;
81517     +       data _null_;
81518     +          dsid = open("&data");
81519     +          if dsid>0 then do;
81520     +               if varnum(dsid, "&FREQ")<1 then
81521     +                  call symput('FREQ', '');
81522     +               dsid = close(dsid);
81523     +          end;
81524     +       run;
81525     +   %end;
81526     +
81527     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
81528     +      class %_Vars &vars;
81529     +      %if &FREQ ne %then %do;
81530     +          freq &FREQ;
81531     +      %end;
81532     +      %if %bquote(&WHERE) ne %then %do;
81533     +            where &WHERE;
81534     +      %end;
81535     +   run;
81536     +   proc sort data=_tempclass;
81537     +      by VARIABLE;
81538     +   run;
81539     +   data &output;
81540     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
81541     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
81542     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
81543     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
81544     +      set _tempclass;
81545     +      format COUNT;
81546     +      keep VARIABLE COUNT PERCENT VALUE;
81547     +   run;
81548     +   proc means data=&output noprint;
81549     +      class VARIABLE;
81550     +      var COUNT;
81551     +      output out=&STAT N=NUMCAT;
81552     +   run;
81553     +   data &STAT;
81554     +      set &STAT;
81555     +      where _TYPE_=1;
81556     +      KEEP VARIABLE NUMCAT;
81557     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
81558     +      format NUMCAT 8.;
81559     +   run;
81560     +   proc datasets lib=work nolist;
81561     +      delete _tempclass;
81562     +   run;
81563     +   quit;
81564     +
81565     +   %doend:
81566     +%mend class_profile;
81567     +
NOTE: %INCLUDE (level 1) ending.
81568      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
81569      data work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   data work.tempSummaryClass;
81570      set EMWS1.Filter_CLASSDIST(drop=Count Percent);
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST(drop=Count Percent);
81571      where Filter='Y';
MPRINT(EM_DIAGRAM):   where Filter='Y';
81572      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

81573      proc sort data=work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempSummaryClass;
81574      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
81575      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPSUMMARYCLASS has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

81576      %class_profile(DATA=EMWS1.Part_TRAIN, OUTPUT=EMWS1.Filter_CLASSDIST, METADATA=EMWS1.Filter_VariableSet, STAT=_STAT);
MPRINT(EM_DIAGRAM):   
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 7 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 7 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon, Nov 19, 2018 11:47:33 PM,
      Last Modified=Mon, Nov 19, 2018 11:47:33 PM,
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\macros.sas7bcat,
      Release Created=9.0401M3,Host Created=X64_8PRO

NOTE: 4 records were written to the file _MAC.
      The minimum record length was 8.
      The maximum record length was 72.
NOTE: There were 7 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
81577     +%macro _vars;
81578     +BasementType CentralAir ConstructionType GarageType LotSize Neighborhood
81579     +WallType
81580     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.Part_TRAIN nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   BasementType CentralAir ConstructionType GarageType LotSize Neighborhood WallType
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 218   Memory used = 511K.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 22 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 22 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data EMWS1.Filter_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 22 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=EMWS1.Filter_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 22 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set WORK._STAT has 8 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 7 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

81581      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
81582      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
81583      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
81584      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
81585      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

81586      proc sort data=EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSDIST;
81587      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
81588      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.01 seconds
      

81589      data EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSDIST;
81590      merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS1.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
81591      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
81592      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
81593      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.FILTER_CLASSDIST.
NOTE: There were 0 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set EMWS1.FILTER_CLASSDIST has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

81594      data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASSFILTER / view=EMWS1.Filter_CLASSFILTER;
81595      set EMWS1.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_CLASSDIST;
81596      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
81597      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.FILTER_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

81598      %let EM_CODEBAR = *------------------------------------------------------------*;
81599      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
81600      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
81601     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
81602     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
81603     +   %let _em_nodeid = EM;
81604     +   %if %symexist(EM_NODEID) %then %do;
81605     +       %let _em_nodeid = &em_nodeid;
81606     +   %end;
81607     +
81608     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
81609     +   %put &EM_CODEBAR;
81610     +   %put * &msgString;
81611     +   %put &EM_CODEBAR;
81612     +
81613     +   /* Process metadata data set */
81614     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
81615     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
81616     +       %let FREQ=;
81617     +       %let _nobs=0;
81618     +       data _null;
81619     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
81620     +          if eof then call symput('_nobs', put(_N_, best.));
81621     +       run;
81622     +       %if "&_nobs" ne "0" %then %do;
81623     +           data _null_;
81624     +              file _mac;
81625     +              length _VARS $80; retain _vars;
81626     +              if _n_ =1 then put '%macro _vars;';
81627     +              set &metadata end=eof;
81628     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
81629     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
81630     +              else do;
81631     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
81632     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
81633     +                 else do;
81634     +                    put _Vars;
81635     +                    _vars = strip(NAME);
81636     +                 end;
81637     +              end;
81638     +
81639     +              if eof then do;
81640     +                 put _Vars;
81641     +                 put '%mend _vars;';
81642     +              end;
81643     +           run;
81644     +       %end;
81645     +       %else %do;
81646     +           data _null_;
81647     +              file _mac;
81648     +              put '%macro _vars;';
81649     +              put '%mend _vars;';
81650     +           run;
81651     +       %end;
81652     +   %end;
81653     +   %else %do;
81654     +       data _null_;
81655     +          file _mac;
81656     +          put '%macro _vars;';
81657     +          put '%mend _vars;';
81658     +       run;
81659     +   %end;
81660     +   %inc _mac;
81661     +   filename _mac;
81662     +
81663     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
81664     +
81665     +   /* Check if FREQ variable is in the data set */
81666     +   %if &freq ne %then %do;
81667     +       data _null_;
81668     +          dsid = open("&data");
81669     +          if dsid>0 then do;
81670     +               if varnum(dsid, "&FREQ")<1 then
81671     +                  call symput('FREQ', '');
81672     +               dsid = close(dsid);
81673     +          end;
81674     +       run;
81675     +   %end;
81676     +
81677     +   %if &bindata eq %then %do;
81678     +       %let bindata = _BOUNDS;
81679     +       proc datasets lib=work nolist mt=(DATA VIEW);
81680     +          delete _BOUNDS;
81681     +       run;
81682     +   %end;
81683     +
81684     +   %global _EM_VARDISTOBS_MAX;
81685     +   %let _EM_VARDISTOBS_MAX = 1000000;
81686     +
81687     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
81688     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
81689     +   %end;
81690     +
81691     +   %if &computeStat = Y %then %do;
81692     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
81693     +          var %_Vars &vars;
81694     +          %if &FREQ ne %then %do;
81695     +              freq &FREQ;
81696     +          %end;
81697     +       run;
81698     +       proc sort data=&stat;
81699     +          by VARIABLE;
81700     +       run;
81701     +
81702     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
81703     +           %let _library = WORK;
81704     +           %let _member  = &STAT;
81705     +      %end;
81706     +      %else %do;
81707     +          %let _library = %scan(&STAT, 1, .);
81708     +          %let _member  = %scan(&STAT, 2, .);
81709     +      %end;
81710     +
81711     +      proc datasets library=&_library nolist;
81712     +         modify &_member;
81713     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
81714     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
81715     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
81716     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
81717     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
81718     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
81719     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
81720     +      run;
81721     +      quit;
81722     +   %end;
81723     +
81724     +   %if &BIN ne N %then %do;
81725     +       %if %sysfunc(exist(&bindata))<1 %then %do;
81726     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
81727     +           %put &EM_CODEBAR;
81728     +           %put * &msgString;
81729     +           %put &EM_CODEBAR;
81730     +           filename fref catalog 'work.em.profileformat.source';
81731     +
81732     +            %let _maxlevel = %eval(&numbars + 1);
81733     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
81734     +               class %_vars &vars;
81735     +            run;
81736     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
81737     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
81738     +            run;
81739     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
81740     +              by NAME;
81741     +           run;
81742     +           proc sort data=_CLASSOUT;
81743     +              by NAME;
81744     +          run;
81745     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
81746     +             var NRAW;
81747     +             by NAME;
81748     +          run;
81749     +          proc delete data=WORK._CLASSOUT;
81750     +          run;
81751     +          data _null_;
81752     +             dsid = open('_DISCRETEMID');
81753     +             if dsid then do;
81754     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
81755     +                dsid = close(dsid);
81756     +             end;
81757     +          run;
81758     +          data _DISCRETEMID;
81759     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
81760     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
81761     +             by VARIABLE;
81762     +             if _b then output;
81763     +          run;
81764     +
81765     +          data _EMVARDIST / view=_EMVARDIST;
81766     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
81767     +          run;
81768     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
81769     +             var %_vars &vars;
81770     +             %if &FREQ ne %then %do;
81771     +                 freq &FREQ / notrunc;
81772     +             %end;
81773     +          run;
81774     +          proc datasets lib=WORK NOLIST;
81775     +             delete _EMVARDIST / mt=view;
81776     +          run;
81777     +          quit;
81778     +          %if %upcase(&minmax) = Y %then %do;
81779     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
81780     +                 where  _type_ in('P0', 'P100');
81781     +              run;
81782     +              data _MINMAXDATA(keep=Variable Value Pos);
81783     +                 set _MINMAXDATA;
81784     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
81785     +                 Value = min; Pos=1; output;
81786     +                 Value = max; Pos=3; output;
81787     +              run;
81788     +          %end;
81789     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
81790     +                                                             COL3=P95 COL4=MAX));
81791     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
81792     +          run;
81793     +          proc sort data=&bindata;
81794     +             by VARIABLE;
81795     +          run;
81796     +
81797     +          %let new_numbars=%eval(&NUMBARS+12);
81798     +          data &bindata;
81799     +             set &bindata;
81800     +             length Format $12;
81801     +             array _midpoint{&new_NUMBARS};
81802     +             array _bounds{&new_NUMBARS};
81803     +             if (max - min)>1e-10 then do;
81804     +                step = abs(P95-P5)/&NUMBARS;
81805     +                lstep = abs(p5- min)/5;
81806     +                ustep = abs(max-p95)/5;
81807     +                /* No outlying values */;
81808     +                if lstep<=step and ustep<=step then do;
81809     +                   step = abs(MIN-MAX)/&NUMBARS;
81810     +                   START=MIN;
81811     +                   do i=1 to &numbars;
81812     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
81813     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
81814     +                   end;
81815     +                   %let new_numbars = &numbars;
81816     +                end;
81817     +                else do;
81818     +                   if lstep<=step then do;
81819     +                      step = abs(MIN-P95)/&NUMBARS;
81820     +                      /* Start Histogram at MIN value */
81821     +                      do i=1 to &NUMBARS;
81822     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
81823     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
81824     +                      end;
81825     +                      /* Make BINS with upper outliers width */
81826     +                      do i=1 to 5;
81827     +                         numbars = &numbars + i;
81828     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
81829     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
81830     +                      end;
81831     +                       %let new_numbars = %eval(&numbars+5);
81832     +                   end;
81833     +                   else do;
81834     +                      /* Make BINS with lower outliers width */
81835     +                      do i=1 to 5;
81836     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
81837     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
81838     +                      end;
81839     +                      if ustep<= step then do;
81840     +                         step = abs(P5-MAX)/&NUMBARS;
81841     +                         /* End Histogram at MAX value */
81842     +                         do i=1 to &NUMBARS;
81843     +                            numbars = i+5;
81844     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
81845     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
81846     +                         end;
81847     +                          %let new_numbars = %eval(&numbars+5);
81848     +                      end;
81849     +                      else do;
81850     +                         do i=1 to &NUMBARS;
81851     +                            numbars = i+5;
81852     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
81853     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
81854     +                         end;
81855     +                         /* Make BINS with upper outliers width */
81856     +                         do i=1 to 5;
81857     +                            numbars = &numbars+5+i;
81858     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
81859     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
81860     +                         end;
81861     +                         %let new_numbars = %eval(&numbars+10);
81862     +                      end;
81863     +                   end;
81864     +                end;
81865     +             end;
81866     +             else do;
81867     +                _bounds(1)   = MIN;
81868     +                _midpoint(1) = MIN;
81869     +             end;
81870     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
81871     +          run;
81872     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
81873     +              data &bindata;
81874     +                 merge &bindata _DISCRETEMID(in = _b);
81875     +                 by VARIABLE;
81876     +                 if _b then _DISCRETE=1;
81877     +                 else _DISCRETE=0;
81878     +              run;
81879     +          %end;
81880     +
81881     +          data _null_;
81882     +             file fref;
81883     +             set &bindata end=eof;
81884     +             array _bounds{&NEW_NUMBARS};
81885     +             array _midpoint{&NEW_NUMBARS};
81886     +             if _n_=1 then
81887     +                put 'proc format;';
81888     +
81889     +             put 'value ' Format;
81890     +             if _DISCRETE then do;
81891     +                 do i=1 to &numbars;
81892     +                    _MID = _midpoint{i};
81893     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
81894     +                       put _MID '="' _MID '"';
81895     +                 end;
81896     +                 put ';';
81897     +             end;
81898     +             else do;
81899     +                if min eq max then do;
81900     +                   put 'low - high ="' MIN '";';
81901     +                end;
81902     +                else do;
81903     +                   _LB  = MIN;
81904     +                   _MID = _midpoint{1};
81905     +                   _UB  = _bounds{1};
81906     +                   put 'LOW -' _UB '="' _MID '"';
81907     +
81908     +                   do i=1 to &NEW_NUMBARS-1;
81909     +                      _LB  = _bounds{i};
81910     +                      j=i+1;
81911     +                      _MID = _midpoint{j};
81912     +                      _UB  = _bounds{j};
81913     +                      if (_UB ne .) and (_LB ne _UB) then do;
81914     +                         if _UB>=MAX then
81915     +                            put _LB '-HIGH="' _MID '"';
81916     +                         else
81917     +                            put _LB '-' _UB '="' _MID '"';
81918     +                      end;
81919     +                   end;
81920     +                end;
81921     +             end;
81922     +             put ';';
81923     +             if eof then put 'run;';
81924     +          run;
81925     +
81926     +          %inc fref;
81927     +
81928     +          filename fref;
81929     +      %end;
81930     +
81931     +      data _binneddata / view=_binneddata;
81932     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
81933     +
81934     +         %let dsid    =%sysfunc(open(&bindata));
81935     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
81936     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
81937     +         %let obs = %sysfunc(fetch(&dsid));
81938     +
81939     +         %if (&obs=0) %then %do;
81940     +             format
81941     +         %end;
81942     +
81943     +         %let _count = 0;
81944     +         %do %while(&obs=0);
81945     +             %let _count = %eval(&_count +1);
81946     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
81947     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
81948     +             %do;
81949     +                &_name &_fmtname..
81950     +             %end;
81951     +             %let obs = %sysfunc(fetch(&dsid));
81952     +         %end;
81953     +         %let dsid=%sysfunc(close(&dsid));
81954     +         ;
81955     +      run;
81956     +   %end;
81957     +
81958     +    %if &bin ne N %then %do;
81959     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
81960     +    %end;
81961     +    %else %do;
81962     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
81963     +    %end;
81964     +      class %_vars &vars;
81965     +      %if &FREQ ne %then %do;
81966     +          freq &FREQ;
81967     +      %end;
81968     +   run;
81969     +   data &output;
81970     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
81971     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
81972     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
81973     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
81974     +      set _temptab;
81975     +      format VALUE 12.3 count;
81976     +      value = inputn(level, 'best12.');
81977     +      keep VARIABLE COUNT PERCENT VALUE;
81978     +   run;
81979     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
81980     +       data &output;
81981     +          set &output(in=_a) _MINMAXDATA;
81982     +          if _a then Pos=2;
81983     +       run;
81984     +       proc sort data=&output out=&output(drop=pos);
81985     +          by VARIABLE POS VALUE;
81986     +          where VALUE ne .;
81987     +       run;
81988     +   %end;
81989     +   proc datasets lib=work nolist mt=(DATA VIEW);
81990     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
81991     +   run;
81992     +   quit;
81993     +
81994     +   %doend:
81995     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
81996      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
81997      %var_profile(DATA=EMWS1.Part_TRAIN, OUTPUT=EMWS1.Filter_VARDIST, METADATA=EMWS1.Filter_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 10 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Mon, Nov 19, 2018 11:47:33 PM,
      Last Modified=Mon, Nov 19, 2018 11:47:33 PM,
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\macros.sas7bcat,
      Release Created=9.0401M3,Host Created=X64_8PRO

NOTE: 4 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 72.
NOTE: There were 10 observations read from the data set EMWS1.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
81998     +%macro _vars;
81999     +Age Basement Baths FirePlace FirstFloor GarageSize SalePrice SecondFloor
82000     +TotalArea UpperArea
82001     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Part_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   Age Basement Baths FirePlace FirstFloor GarageSize SalePrice SecondFloor TotalArea UpperArea
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 218   Memory used = 511K.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set WORK._CLASSOUT has 130 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 130 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 3 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 3 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 130 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 130 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 130 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 10 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 3 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Part_TRAIN(keep
MPRINT(VAR_PROFILE):  =Age Basement Baths FirePlace FirstFloor GarageSize SalePrice SecondFloor TotalArea UpperArea obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   Age Basement Baths FirePlace FirstFloor GarageSize SalePrice SecondFloor TotalArea UpperArea
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.09 seconds
      
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 218 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 11 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.14 seconds
      cpu time            0.11 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 10 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 10 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 10 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 10 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 10 observations read from the data set WORK._BOUNDS.
NOTE: There were 3 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 10 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon, Nov 19, 2018 11:47:34 PM,
      Last Modified=Mon, Nov 19, 2018 11:47:34 PM,
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\em.sas7bcat,
      Release Created=9.0401M3,Host Created=X64_8PRO

NOTE: 183 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 34.
NOTE: There were 10 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
82002     +proc format;
MPRINT(VAR_PROFILE):   proc format;
82003     +value F1_
82004     +LOW -4.8 ="-2.21875 "
82005     +4.8 -12.6 ="5.58125 "
82006     +12.6 -20.4 ="13.38125 "
82007     +20.4 -28.2 ="21.18125 "
82008     +28.2 -36 ="28.98125 "
82009     +36 -37.9375 ="36.96875 "
82010     +37.9375 -39.875 ="38.90625 "
82011     +39.875 -41.8125 ="40.84375 "
82012     +41.8125 -43.75 ="42.78125 "
82013     +43.75 -45.6875 ="44.71875 "
82014     +45.6875 -47.625 ="46.65625 "
82015     +47.625 -49.5625 ="48.59375 "
82016     +49.5625 -51.5 ="50.53125 "
82017     +51.5 -53.4375 ="52.46875 "
82018     +53.4375 -55.375 ="54.40625 "
82019     +55.375 -57.3125 ="56.34375 "
82020     +57.3125 -59.25 ="58.28125 "
82021     +59.25 -61.1875 ="60.21875 "
82022     +61.1875 -63.125 ="62.15625 "
82023     +63.125 -65.0625 ="64.09375 "
82024     +65.0625 -HIGH="66.03125 "
82025     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -4.8 ="-2.21875 " 4.8 -12.6 ="5.58125 " 12.6 -20.4 ="13.38125 " 20.4 -28.2 ="21.18125 " 28.2 -36 ="28.98125 " 36 -37.9375 ="36.96875 " 37.9375 -39.875 ="38.90625 " 39.875 -41.8125 ="40.84375 " 41.8125 -43.75 ="42.78125 
" 43.75 -45.6875 ="44.71875 " 45.6875 -47.625 ="46.65625 " 47.625 -49.5625 ="48.59375 " 49.5625 -51.5 ="50.53125 " 51.5 -53.4375 ="52.46875 " 53.4375 -55.375 ="54.40625 " 55.375 -57.3125 ="56.34375 " 57.3125 -59.25 ="58.28125 " 59.25 -61.1875 ="60.21875 " 
61.1875 -63.125 ="62.15625 " 63.125 -65.0625 ="64.09375 " 65.0625 -HIGH="66.03125 " ;
NOTE: Format F1_ has been output.
82026     +value F2_
82027     +LOW -54.25 ="27.125 "
82028     +54.25 -108.5 ="81.375 "
82029     +108.5 -162.75 ="135.625 "
82030     +162.75 -217 ="189.875 "
82031     +217 -271.25 ="244.125 "
82032     +271.25 -325.5 ="298.375 "
82033     +325.5 -379.75 ="352.625 "
82034     +379.75 -434 ="406.875 "
82035     +434 -488.25 ="461.125 "
82036     +488.25 -542.5 ="515.375 "
82037     +542.5 -596.75 ="569.625 "
82038     +596.75 -651 ="623.875 "
82039     +651 -705.25 ="678.125 "
82040     +705.25 -759.5 ="732.375 "
82041     +759.5 -813.75 ="786.625 "
82042     +813.75 -868 ="840.875 "
82043     +868 -973.2 ="946.075 "
82044     +973.2 -1078.4 ="1051.275 "
82045     +1078.4 -1183.6 ="1156.475 "
82046     +1183.6 -1288.8 ="1261.675 "
82047     +1288.8 -HIGH="1366.875 "
82048     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -54.25 ="27.125 " 54.25 -108.5 ="81.375 " 108.5 -162.75 ="135.625 " 162.75 -217 ="189.875 " 217 -271.25 ="244.125 " 271.25 -325.5 ="298.375 " 325.5 -379.75 ="352.625 " 379.75 -434 ="406.875 " 434 -488.25 ="461.125 " 
488.25 -542.5 ="515.375 " 542.5 -596.75 ="569.625 " 596.75 -651 ="623.875 " 651 -705.25 ="678.125 " 705.25 -759.5 ="732.375 " 759.5 -813.75 ="786.625 " 813.75 -868 ="840.875 " 868 -973.2 ="946.075 " 973.2 -1078.4 ="1051.275 " 1078.4 -1183.6 ="1156.475 " 
1183.6 -1288.8 ="1261.675 " 1288.8 -HIGH="1366.875 " ;
NOTE: Format F2_ has been output.
82049     +value F3_
82050     +1 ="1 "
82051     +2 ="2 "
82052     +3 ="3 "
82053     +6 ="6 "
82054     +;
MPRINT(VAR_PROFILE):   value F3_ 1 ="1 " 2 ="2 " 3 ="3 " 6 ="6 " ;
NOTE: Format F3_ has been output.
MPRINT(VAR_PROFILE):   ;
82055     +;
82056     +value F4_
82057     +0 ="0 "
82058     +1 ="1 "
82059     +2 ="2 "
82060     +3 ="3 "
82061     +;
MPRINT(VAR_PROFILE):   value F4_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " ;
NOTE: Format F4_ has been output.
MPRINT(VAR_PROFILE):   ;
82062     +;
82063     +value F5_
82064     +LOW -636.3125 ="612.15625 "
82065     +636.3125 -684.625 ="660.46875 "
82066     +684.625 -732.9375 ="708.78125 "
82067     +732.9375 -781.25 ="757.09375 "
82068     +781.25 -829.5625 ="805.40625 "
82069     +829.5625 -877.875 ="853.71875 "
82070     +877.875 -926.1875 ="902.03125 "
82071     +926.1875 -974.5 ="950.34375 "
82072     +974.5 -1022.8125 ="998.65625 "
82073     +1022.8125 -1071.125 ="1046.96875 "
82074     +1071.125 -1119.4375 ="1095.28125 "
82075     +1119.4375 -1167.75 ="1143.59375 "
82076     +1167.75 -1216.0625 ="1191.90625 "
82077     +1216.0625 -1264.375 ="1240.21875 "
82078     +1264.375 -1312.6875 ="1288.53125 "
82079     +1312.6875 -1361 ="1336.84375 "
82080     +1361 -1514.8 ="1490.64375 "
82081     +1514.8 -1668.6 ="1644.44375 "
82082     +1668.6 -1822.4 ="1798.24375 "
82083     +1822.4 -1976.2 ="1952.04375 "
82084     +1976.2 -HIGH="2105.84375 "
82085     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -636.3125 ="612.15625 " 636.3125 -684.625 ="660.46875 " 684.625 -732.9375 ="708.78125 " 732.9375 -781.25 ="757.09375 " 781.25 -829.5625 ="805.40625 " 829.5625 -877.875 ="853.71875 " 877.875 -926.1875 ="902.03125 " 
926.1875 -974.5 ="950.34375 " 974.5 -1022.8125 ="998.65625 " 1022.8125 -1071.125 ="1046.96875 " 1071.125 -1119.4375 ="1095.28125 " 1119.4375 -1167.75 ="1143.59375 " 1167.75 -1216.0625 ="1191.90625 " 1216.0625 -1264.375 ="1240.21875 " 1264.375 -1312.6875 
="1288.53125 " 1312.6875 -1361 ="1336.84375 " 1361 -1514.8 ="1490.64375 " 1514.8 -1668.6 ="1644.44375 " 1668.6 -1822.4 ="1798.24375 " 1822.4 -1976.2 ="1952.04375 " 1976.2 -HIGH="2105.84375 " ;
NOTE: Format F5_ has been output.
82086     +value F6_
82087     +0 ="0 "
82088     +1 ="1 "
82089     +2 ="2 "
82090     +;
MPRINT(VAR_PROFILE):   value F6_ 0 ="0 " 1 ="1 " 2 ="2 " ;
NOTE: Format F6_ has been output.
MPRINT(VAR_PROFILE):   ;
82091     +;
82092     +value F7_
82093     +LOW -14723.6 ="6498.5 "
82094     +14723.6 -24433.2 ="16208.1 "
82095     +24433.2 -34142.8 ="25917.7 "
82096     +34142.8 -43852.4 ="35627.3 "
82097     +43852.4 -53562 ="45336.9 "
82098     +53562 -56531 ="55046.5 "
82099     +56531 -59500 ="58015.5 "
82100     +59500 -62469 ="60984.5 "
82101     +62469 -65438 ="63953.5 "
82102     +65438 -68407 ="66922.5 "
82103     +68407 -71376 ="69891.5 "
82104     +71376 -74345 ="72860.5 "
82105     +74345 -77314 ="75829.5 "
82106     +77314 -80283 ="78798.5 "
82107     +80283 -83252 ="81767.5 "
82108     +83252 -86221 ="84736.5 "
82109     +86221 -89190 ="87705.5 "
82110     +89190 -92159 ="90674.5 "
82111     +92159 -95128 ="93643.5 "
82112     +95128 -98097 ="96612.5 "
82113     +98097 -101066 ="99581.5 "
82114     +101066 -107925.4 ="106440.9 "
82115     +107925.4 -114784.8 ="113300.3 "
82116     +114784.8 -121644.2 ="120159.7 "
82117     +121644.2 -128503.6 ="127019.1 "
82118     +128503.6 -HIGH="133878.5 "
82119     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -14723.6 ="6498.5 " 14723.6 -24433.2 ="16208.1 " 24433.2 -34142.8 ="25917.7 " 34142.8 -43852.4 ="35627.3 " 43852.4 -53562 ="45336.9 " 53562 -56531 ="55046.5 " 56531 -59500 ="58015.5 " 59500 -62469 ="60984.5 " 62469 
-65438 ="63953.5 " 65438 -68407 ="66922.5 " 68407 -71376 ="69891.5 " 71376 -74345 ="72860.5 " 74345 -77314 ="75829.5 " 77314 -80283 ="78798.5 " 80283 -83252 ="81767.5 " 83252 -86221 ="84736.5 " 86221 -89190 ="87705.5 " 89190 -92159 ="90674.5 " 92159 
-95128 ="93643.5 " 95128 -98097 ="96612.5 " 98097 -101066 ="99581.5 " 101066 -107925.4 ="106440.9 " 107925.4 -114784.8 ="113300.3 " 114784.8 -121644.2 ="120159.7 " 121644.2 -128503.6 ="127019.1 " 128503.6 -HIGH="133878.5 " ;
NOTE: Format F7_ has been output.
82120     +value F8_
82121     +LOW -48.4375 ="24.21875 "
82122     +48.4375 -96.875 ="72.65625 "
82123     +96.875 -145.3125 ="121.09375 "
82124     +145.3125 -193.75 ="169.53125 "
82125     +193.75 -242.1875 ="217.96875 "
82126     +242.1875 -290.625 ="266.40625 "
82127     +290.625 -339.0625 ="314.84375 "
82128     +339.0625 -387.5 ="363.28125 "
82129     +387.5 -435.9375 ="411.71875 "
82130     +435.9375 -484.375 ="460.15625 "
82131     +484.375 -532.8125 ="508.59375 "
82132     +532.8125 -581.25 ="557.03125 "
82133     +581.25 -629.6875 ="605.46875 "
82134     +629.6875 -678.125 ="653.90625 "
82135     +678.125 -726.5625 ="702.34375 "
82136     +726.5625 -775 ="750.78125 "
82137     +775 -883.2 ="858.98125 "
82138     +883.2 -991.4 ="967.18125 "
82139     +991.4 -1099.6 ="1075.38125 "
82140     +1099.6 -1207.8 ="1183.58125 "
82141     +1207.8 -HIGH="1291.78125 "
82142     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -48.4375 ="24.21875 " 48.4375 -96.875 ="72.65625 " 96.875 -145.3125 ="121.09375 " 145.3125 -193.75 ="169.53125 " 193.75 -242.1875 ="217.96875 " 242.1875 -290.625 ="266.40625 " 290.625 -339.0625 ="314.84375 " 339.0625 
-387.5 ="363.28125 " 387.5 -435.9375 ="411.71875 " 435.9375 -484.375 ="460.15625 " 484.375 -532.8125 ="508.59375 " 532.8125 -581.25 ="557.03125 " 581.25 -629.6875 ="605.46875 " 629.6875 -678.125 ="653.90625 " 678.125 -726.5625 ="702.34375 " 726.5625 -775 
="750.78125 " 775 -883.2 ="858.98125 " 883.2 -991.4 ="967.18125 " 991.4 -1099.6 ="1075.38125 " 1099.6 -1207.8 ="1183.58125 " 1207.8 -HIGH="1291.78125 " ;
NOTE: Format F8_ has been output.
82143     +value F9_
82144     +LOW -903.25 ="866.625 "
82145     +903.25 -976.5 ="939.875 "
82146     +976.5 -1049.75 ="1013.125 "
82147     +1049.75 -1123 ="1086.375 "
82148     +1123 -1196.25 ="1159.625 "
82149     +1196.25 -1269.5 ="1232.875 "
82150     +1269.5 -1342.75 ="1306.125 "
82151     +1342.75 -1416 ="1379.375 "
82152     +1416 -1489.25 ="1452.625 "
82153     +1489.25 -1562.5 ="1525.875 "
82154     +1562.5 -1635.75 ="1599.125 "
82155     +1635.75 -1709 ="1672.375 "
82156     +1709 -1782.25 ="1745.625 "
82157     +1782.25 -1855.5 ="1818.875 "
82158     +1855.5 -1928.75 ="1892.125 "
82159     +1928.75 -2002 ="1965.375 "
82160     +2002 -2122.6 ="2085.975 "
82161     +2122.6 -2243.2 ="2206.575 "
82162     +2243.2 -2363.8 ="2327.175 "
82163     +2363.8 -2484.4 ="2447.775 "
82164     +2484.4 -HIGH="2568.375 "
82165     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -903.25 ="866.625 " 903.25 -976.5 ="939.875 " 976.5 -1049.75 ="1013.125 " 1049.75 -1123 ="1086.375 " 1123 -1196.25 ="1159.625 " 1196.25 -1269.5 ="1232.875 " 1269.5 -1342.75 ="1306.125 " 1342.75 -1416 ="1379.375 " 1416 
-1489.25 ="1452.625 " 1489.25 -1562.5 ="1525.875 " 1562.5 -1635.75 ="1599.125 " 1635.75 -1709 ="1672.375 " 1709 -1782.25 ="1745.625 " 1782.25 -1855.5 ="1818.875 " 1855.5 -1928.75 ="1892.125 " 1928.75 -2002 ="1965.375 " 2002 -2122.6 ="2085.975 " 2122.6 
-2243.2 ="2206.575 " 2243.2 -2363.8 ="2327.175 " 2363.8 -2484.4 ="2447.775 " 2484.4 -HIGH="2568.375 " ;
NOTE: Format F9_ has been output.
82166     +value F10_
82167     +LOW -57.0625 ="28.53125 "
82168     +57.0625 -114.125 ="85.59375 "
82169     +114.125 -171.1875 ="142.65625 "
82170     +171.1875 -228.25 ="199.71875 "
82171     +228.25 -285.3125 ="256.78125 "
82172     +285.3125 -342.375 ="313.84375 "
82173     +342.375 -399.4375 ="370.90625 "
82174     +399.4375 -456.5 ="427.96875 "
82175     +456.5 -513.5625 ="485.03125 "
82176     +513.5625 -570.625 ="542.09375 "
82177     +570.625 -627.6875 ="599.15625 "
82178     +627.6875 -684.75 ="656.21875 "
82179     +684.75 -741.8125 ="713.28125 "
82180     +741.8125 -798.875 ="770.34375 "
82181     +798.875 -855.9375 ="827.40625 "
82182     +855.9375 -HIGH="884.46875 "
82183     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -57.0625 ="28.53125 " 57.0625 -114.125 ="85.59375 " 114.125 -171.1875 ="142.65625 " 171.1875 -228.25 ="199.71875 " 228.25 -285.3125 ="256.78125 " 285.3125 -342.375 ="313.84375 " 342.375 -399.4375 ="370.90625 " 
399.4375 -456.5 ="427.96875 " 456.5 -513.5625 ="485.03125 " 513.5625 -570.625 ="542.09375 " 570.625 -627.6875 ="599.15625 " 627.6875 -684.75 ="656.21875 " 684.75 -741.8125 ="713.28125 " 741.8125 -798.875 ="770.34375 " 798.875 -855.9375 ="827.40625 " 
855.9375 -HIGH="884.46875 " ;
NOTE: Format F10_ has been output.
MPRINT(VAR_PROFILE):   run;
82184     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.Part_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format Age F1_. Basement F2_. Baths F3_. FirePlace F4_. FirstFloor F5_. GarageSize F6_. SalePrice F7_. SecondFloor F8_. TotalArea F9_. UpperArea F10_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   Age Basement Baths FirePlace FirstFloor GarageSize SalePrice SecondFloor TotalArea UpperArea
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 218   Memory used = 511K.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 218 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 137 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 137 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS1.FILTER_VARDIST has 137 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data EMWS1.Filter_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Filter_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 137 observations read from the data set EMWS1.FILTER_VARDIST.
NOTE: There were 20 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS1.FILTER_VARDIST has 157 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=EMWS1.Filter_VARDIST out=EMWS1.Filter_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 157 observations read from the data set EMWS1.FILTER_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS1.FILTER_VARDIST has 157 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    data WORK.M2N01VWZ;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M2N01VWZ end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
82195      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
82196      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
82197      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
82198      %macro DMDBClass;
82199          BasementType(ASC) CentralAir(ASC) ConstructionType(ASC) GarageType(ASC)
82200         LotSize(ASC) Neighborhood(ASC) WallType(ASC)
82201      %mend DMDBClass;
82202      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
82203      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
82204      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
82205      %macro DMDBVar;
82206          Age Basement Baths FirePlace FirstFloor GarageSize SecondFloor TotalArea
82207         UpperArea
82208      %mend DMDBVar;
82209      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
82210      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
82211      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
82212      proc dmdb batch data=EMWS1.Part_TRAIN
82213      classout=WORK._EMFILTERCLASS
82214      varout=WORK._EMFILTERVAR
82215      maxlevel = 26
82216      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Part_TRAIN classout=WORK._EMFILTERCLASS varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   class
82217      class %DMDBClass;
MPRINT(DMDBCLASS):   BasementType(ASC) CentralAir(ASC) ConstructionType(ASC) GarageType(ASC) LotSize(ASC) Neighborhood(ASC) WallType(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
82218      var %DMDBVar;
MPRINT(DMDBVAR):   Age Basement Baths FirePlace FirstFloor GarageSize SecondFloor TotalArea UpperArea
MPRINT(EM_DIAGRAM):  ;
82219      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 218   Memory used = 511K.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set WORK._EMFILTERCLASS has 22 observations and 9 variables.
NOTE: The data set WORK._EMFILTERVAR has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
82220      quit;
82221      *--- end code ---*;

82222      data WORK.M2N01VWZ;
MPRINT(EM_DIAGRAM):    data WORK.M2N01VWZ;
82223      set WORK.M2N01VWZ;
MPRINT(EM_DIAGRAM):   set WORK.M2N01VWZ;
82224      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
82225      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
82226      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.M2N01VWZ.
NOTE: The data set WORK.M2N01VWZ has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82227      proc freq data=WORK._EMFILTERCLASS noprint;
MPRINT(EM_DIAGRAM):    proc freq data=WORK._EMFILTERCLASS noprint;
82228      table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
MPRINT(EM_DIAGRAM):   table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
82229      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERFREQ has 7 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

82230      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
82231      set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(EM_DIAGRAM):   set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
82232      _OBS_= _N_;
MPRINT(EM_DIAGRAM):   _OBS_= _N_;
82233      if (CRAW eq '' and NRAW eq .) then _OBS_=0;
MPRINT(EM_DIAGRAM):   if (CRAW eq '' and NRAW eq .) then _OBS_=0;
82234      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 22 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

82235      proc sort data=WORK._EMFILTERCLASS nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._EMFILTERCLASS nodupkey;
82236      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
82237      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._EMFILTERCLASS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._EMFILTERCLASS has 22 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82238      proc sort data=WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERFREQ;
82239      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82240      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERFREQ has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

82241      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
82242      merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
82243      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82244      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._EMFILTERCLASS.
NOTE: There were 7 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERCLASS has 22 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82245      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):    data work._FilterMinFreq;
82246      set WORK.M0IFW9K2;
MPRINT(EM_DIAGRAM):   set WORK.M0IFW9K2;
82247      where level ne 'INTERVAL';
MPRINT(EM_DIAGRAM):   where level ne 'INTERVAL';
82248      if KEEPMISSING in('D', '') then
82249      KEEPMISSING = "Y";
MPRINT(EM_DIAGRAM):   if KEEPMISSING in('D', '') then KEEPMISSING = "Y";
82250      *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
82251      if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
82252      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
82253      if minfreq = . then minfreq=1;
MPRINT(EM_DIAGRAM):   if minfreq = . then minfreq=1;
82254      if MAXVALUES = . then MAXVALUES = 25;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES = 25;
82255      minClassPct = 0.01;
MPRINT(EM_DIAGRAM):   minClassPct = 0.01;
82256      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M0IFW9K2.
      WHERE level not = 'INTERVAL';
NOTE: The data set WORK._FILTERMINFREQ has 7 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

82257      proc sort data=work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   proc sort data=work._FilterMinFreq;
82258      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82259      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._FILTERMINFREQ.
NOTE: The data set WORK._FILTERMINFREQ has 7 observations and 27 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82260      proc sort data=WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERCLASS;
82261      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82262      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 22 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

82263      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   data work._FilterMinFreq;
82264      merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
MPRINT(EM_DIAGRAM):   merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
82265      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
82266      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82267      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._FILTERMINFREQ.
NOTE: There were 22 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._FILTERMINFREQ has 22 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82268      data work._FilterExclude;
MPRINT(EM_DIAGRAM):    data work._FilterExclude;
82269      set work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   set work._FilterMinFreq;
82270      where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and CRAW='');
MPRINT(EM_DIAGRAM):   where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and 
CRAW='');
82271      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
      WHERE ((((CALCMETHOD='MINFREQ') and (COUNT not = .) and (COUNT<=minfreq)) or ((CALCMETHOD='MINPCT') and (NMISSPERCENT not = .) and (minClassPct>=(0.01*NMISSPERCENT)))) and (NUMLEVELS<=MAXVALUES)) or ((KEEPMISSING='N') and (NRAW=.) and (CRAW=' '));
NOTE: The data set WORK._FILTEREXCLUDE has 4 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82272      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
82273      set WORK.M0IFW9K2;
MPRINT(EM_DIAGRAM):   set WORK.M0IFW9K2;
82274      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "MINPCT";
82275      if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
82276      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.M0IFW9K2.
NOTE: The data set WORK._MANUALEXCLUDE has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

82277      proc sort data=work._ManualExclude;
MPRINT(EM_DIAGRAM):   proc sort data=work._ManualExclude;
82278      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82279      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._MANUALEXCLUDE has 0 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

82280      proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
82281      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82282      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSFILTER.
NOTE: View EMWS1.FILTER_CLASSFILTER.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: There were 0 observations read from the data set EMWS1.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

82283      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
82284      merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
82285      _OBS_=_N_;
MPRINT(EM_DIAGRAM):   _OBS_=_N_;
82286      if strip(Level) in('.', '') then _OBS_=0;
MPRINT(EM_DIAGRAM):   if strip(Level) in('.', '') then _OBS_=0;
82287      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
82288      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82289      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._MANUALEXCLUDE has 0 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82290      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
82291      set work._ManualExclude work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._ManualExclude work._FilterExclude;
82292      if type = 'N' and format='' then level= strip(level);
MPRINT(EM_DIAGRAM):   if type = 'N' and format='' then level= strip(level);
82293      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 4 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82294      proc sort data=work._FilterExclude nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=work._FilterExclude nodupkey;
82295      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
82296      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._FILTEREXCLUDE has 4 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

82297      %let _FilterClassNum= 0;
82298      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
82299      retain newvarindex 0;
MPRINT(EM_DIAGRAM):   retain newvarindex 0;
82300      length newvar normvar $32;
MPRINT(EM_DIAGRAM):   length newvar normvar $32;
82301      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
82302      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
82303      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82304      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
82305      newvarindex + 1;
MPRINT(EM_DIAGRAM):   newvarindex + 1;
82306      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
82307      newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
82308      end;
MPRINT(EM_DIAGRAM):   end;
82309      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
82310      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
82311      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
82312      normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
82313      end;
MPRINT(EM_DIAGRAM):   end;
82314      end;
MPRINT(EM_DIAGRAM):   end;
82315      end;
MPRINT(EM_DIAGRAM):   end;
82316      if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
82317      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: The variable string in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 4 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82318      data EMWS1.Filter_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_CLASS;
82319      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,        NOQUOTE))" COUNT =
82320         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" CALCMETHOD =
82321         "%sysfunc(sasmsg(sashelp.dmine, rpt_filtermethod_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" ROLE = "Role" VALUE = "Value" COUNT = "Frequency Count" PERCENT = "Percent" LABEL = "Label" CALCMETHOD = "Filter Method";
82322      length VALUE $12;
MPRINT(EM_DIAGRAM):   length VALUE $12;
82323      set work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._FilterExclude;
82324      keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
MPRINT(EM_DIAGRAM):   keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
82325      if COUNT = . then COUNT = 0;
MPRINT(EM_DIAGRAM):   if COUNT = . then COUNT = 0;
82326      if PERCENT = . then PERCENT = 0;
MPRINT(EM_DIAGRAM):   if PERCENT = . then PERCENT = 0;
82327      VALUE = LEVEL;
MPRINT(EM_DIAGRAM):   VALUE = LEVEL;
82328      if _OBS_ = 0 and KEEPMISSING='N' then do;
MPRINT(EM_DIAGRAM):   if _OBS_ = 0 and KEEPMISSING='N' then do;
82329      CALCMETHOD= '';
MPRINT(EM_DIAGRAM):   CALCMETHOD= '';
82330      KEEPMISSING = '';
MPRINT(EM_DIAGRAM):   KEEPMISSING = '';
82331      if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
MPRINT(EM_DIAGRAM):   if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
82332      if type eq 'N' then do;
MPRINT(EM_DIAGRAM):   if type eq 'N' then do;
82333      VALUE = strip(VALUE);
MPRINT(EM_DIAGRAM):   VALUE = strip(VALUE);
82334      if VALUE = '' then VALUE = '.';
MPRINT(EM_DIAGRAM):   if VALUE = '' then VALUE = '.';
82335      end;
MPRINT(EM_DIAGRAM):   end;
82336      end;
MPRINT(EM_DIAGRAM):   end;
82337      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set EMWS1.FILTER_CLASS has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

82338      %let _FOBS=0;
82339      filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\NEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\NEWVAR.txt";
82340      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
82341      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
82342      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
82343      file _X;
MPRINT(EM_DIAGRAM):   file _X;
82344      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82345      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
82346      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
82347      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
82348      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
82349      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
82350      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
82351      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
82352      put string;
MPRINT(EM_DIAGRAM):   put string;
82353      end;
MPRINT(EM_DIAGRAM):   end;
82354      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
82355      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
82356      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
82357      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
82358      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
82359      end;
MPRINT(EM_DIAGRAM):   end;
82360      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
82361      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
82362      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
82363      put string;
MPRINT(EM_DIAGRAM):   put string;
82364      end;
MPRINT(EM_DIAGRAM):   end;
82365      end;
MPRINT(EM_DIAGRAM):   end;
82366      end;
MPRINT(EM_DIAGRAM):   end;
82367      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
82368      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\NEWVAR.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Nov2018:23:47:36,
      Create Time=19Nov2018:23:47:36

NOTE: 16 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 36.
NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

82369      %let _FOBS=0;
82370      filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\PUBLISHNEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\PUBLISHNEWVAR.txt";
82371      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
82372      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
82373      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
82374      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
82375      file _X;
MPRINT(EM_DIAGRAM):   file _X;
82376      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82377      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
82378      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
82379      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
82380      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
82381      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
82382      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
82383      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
82384      put string;
MPRINT(EM_DIAGRAM):   put string;
82385      end;
MPRINT(EM_DIAGRAM):   end;
82386      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
82387      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
82388      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
82389      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
82390      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
82391      end;
MPRINT(EM_DIAGRAM):   end;
82392      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
82393      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
82394      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
82395      put string;
MPRINT(EM_DIAGRAM):   put string;
82396      end;
MPRINT(EM_DIAGRAM):   end;
82397      end;
MPRINT(EM_DIAGRAM):   end;
82398      end;
MPRINT(EM_DIAGRAM):   end;
82399      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
82400      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\PUBLISHNEWVAR.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Nov2018:23:47:36,
      Create Time=19Nov2018:23:47:36

NOTE: 16 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 36.
NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82401      %let _FOBS=0;
82402      filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\CLASSFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\CLASSFILTERCODE.txt";
82403      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
82404      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
82405      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
82406      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
82407      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
82408      file _X;
MPRINT(EM_DIAGRAM):   file _X;
82409      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82410      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
82411      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
82412      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
82413      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
82414      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
82415      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
82416      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
82417      end;
MPRINT(EM_DIAGRAM):   end;
82418      else do;
MPRINT(EM_DIAGRAM):   else do;
82419      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
82420      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
82421      end;
MPRINT(EM_DIAGRAM):   end;
82422      end;
MPRINT(EM_DIAGRAM):   end;
82423      else do;
MPRINT(EM_DIAGRAM):   else do;
82424      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
82425      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
82426      end;
MPRINT(EM_DIAGRAM):   end;
82427      else do;
MPRINT(EM_DIAGRAM):   else do;
82428      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
82429      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
82430      end;
MPRINT(EM_DIAGRAM):   end;
82431      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
82432      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
82433      end;
MPRINT(EM_DIAGRAM):   end;
82434      else do;
MPRINT(EM_DIAGRAM):   else do;
82435      put line;
MPRINT(EM_DIAGRAM):   put line;
82436      line = string;
MPRINT(EM_DIAGRAM):   line = string;
82437      end;
MPRINT(EM_DIAGRAM):   end;
82438      end;
MPRINT(EM_DIAGRAM):   end;
82439      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
82440      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
82441      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
82442      end;
MPRINT(EM_DIAGRAM):   end;
82443      put line;
MPRINT(EM_DIAGRAM):   put line;
82444      end;
MPRINT(EM_DIAGRAM):   end;
82445      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
82446      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\CLASSFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Nov2018:23:47:36,
      Create Time=19Nov2018:23:47:36

NOTE: 3 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 32.
NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

82447      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
82448      %let _FOBS=0;
82449      filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\CLASSPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\CLASSPUBLISHFILTERCODE.txt";
82450      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
82451      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
82452      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
82453      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
82454      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
82455      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
82456      file _X;
MPRINT(EM_DIAGRAM):   file _X;
82457      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82458      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
82459      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
82460      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
82461      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
82462      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
82463      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
82464      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
82465      end;
MPRINT(EM_DIAGRAM):   end;
82466      else do;
MPRINT(EM_DIAGRAM):   else do;
82467      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
82468      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
82469      end;
MPRINT(EM_DIAGRAM):   end;
82470      end;
MPRINT(EM_DIAGRAM):   end;
82471      else do;
MPRINT(EM_DIAGRAM):   else do;
82472      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
82473      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
82474      end;
MPRINT(EM_DIAGRAM):   end;
82475      else do;
MPRINT(EM_DIAGRAM):   else do;
82476      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
82477      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
82478      end;
MPRINT(EM_DIAGRAM):   end;
82479      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
82480      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
82481      end;
MPRINT(EM_DIAGRAM):   end;
82482      else do;
MPRINT(EM_DIAGRAM):   else do;
82483      put line;
MPRINT(EM_DIAGRAM):   put line;
82484      line = string;
MPRINT(EM_DIAGRAM):   line = string;
82485      end;
MPRINT(EM_DIAGRAM):   end;
82486      end;
MPRINT(EM_DIAGRAM):   end;
82487      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
82488      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
82489      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
82490      end;
MPRINT(EM_DIAGRAM):   end;
82491      put line;
MPRINT(EM_DIAGRAM):   put line;
82492      end;
MPRINT(EM_DIAGRAM):   end;
82493      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
82494      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\CLASSPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Nov2018:23:47:36,
      Create Time=19Nov2018:23:47:36

NOTE: 3 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 32.
NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82495      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
82496      %let _FilterIntervalNum= 0;
82497      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
82498      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82499      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.FILTER_INTERVAL.
NOTE: The data set EMWS1.FILTER_INTERVAL has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.00 seconds
      

82500      filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\INTERVALFILTERCODE.txt";
82501      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
82502      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
82503      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
82504      file _X;
MPRINT(EM_DIAGRAM):   file _X;
82505      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
82506      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
82507      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82508      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
82509      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
82510      end;
MPRINT(EM_DIAGRAM):   end;
82511      else do;
MPRINT(EM_DIAGRAM):   else do;
82512      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
82513      end;
MPRINT(EM_DIAGRAM):   end;
82514      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
82515      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
82516      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
82517      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
82518      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
82519      end;
MPRINT(EM_DIAGRAM):   end;
82520      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
82521      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
82522      end;
MPRINT(EM_DIAGRAM):   end;
82523      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
82524      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
82525      end;
MPRINT(EM_DIAGRAM):   end;
82526      end;
MPRINT(EM_DIAGRAM):   end;
82527      else do;
MPRINT(EM_DIAGRAM):   else do;
82528      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
82529      end;
MPRINT(EM_DIAGRAM):   end;
82530      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
82531      put string;
MPRINT(EM_DIAGRAM):   put string;
82532      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
82533      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Nov2018:23:47:36,
      Create Time=19Nov2018:23:47:36

NOTE: 9 records were written to the file _X.
      The minimum record length was 58.
      The maximum record length was 86.
NOTE: There were 9 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

82534      %let _FilterIntervalNum= 0;
82535      proc sort data=EMWS1.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Filter_INTERVAL;
82536      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82537      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

82538      filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
82539      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
82540      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
82541      set EMWS1.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL end=eof;
82542      file _X;
MPRINT(EM_DIAGRAM):   file _X;
82543      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
82544      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
82545      ;
MPRINT(EM_DIAGRAM):   ;
82546      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82547      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
82548      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
82549      end;
MPRINT(EM_DIAGRAM):   end;
82550      else do;
MPRINT(EM_DIAGRAM):   else do;
82551      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
82552      end;
MPRINT(EM_DIAGRAM):   end;
82553      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
82554      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
82555      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
82556      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
82557      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
82558      end;
MPRINT(EM_DIAGRAM):   end;
82559      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
82560      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
82561      end;
MPRINT(EM_DIAGRAM):   end;
82562      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
82563      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
82564      end;
MPRINT(EM_DIAGRAM):   end;
82565      end;
MPRINT(EM_DIAGRAM):   end;
82566      else do;
MPRINT(EM_DIAGRAM):   else do;
82567      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
82568      end;
MPRINT(EM_DIAGRAM):   end;
82569      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
82570      put string;
MPRINT(EM_DIAGRAM):   put string;
82571      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
82572      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7616_COB-MBA058_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Nov2018:23:47:36,
      Create Time=19Nov2018:23:47:36

NOTE: 9 records were written to the file _X.
      The minimum record length was 58.
      The maximum record length was 86.
NOTE: There were 9 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82573      data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS1.Filter_TRAIN / view=EMWS1.Filter_TRAIN;
82574      set EMWS1.Part_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TRAIN;
82575      
82576      
82577      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
82578      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
82579      _FILTERFMT1= put(GarageType,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(GarageType,BEST.);
82580      length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
82581      drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
82582      %dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
82583      
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
82584      
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(LotSize,BEST.);
82585      length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
82586      drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
82587      _FILTERFMT2= put(LotSize,BEST.);
82588      length _FILTERNORM2  $32;
82589      drop _FILTERNORM2 ;
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
82590      %dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
82591      if
82592      _FILTERNORM1 not in ( '4' , '5')
82593       and
82594      _FILTERNORM2 not in ( '2' , '3')
82595      and
82596      ( Age eq . or (22.887167558<=Age) and (Age<=71.966043451))
82597      and ( Basement eq . or (-747.89189<=Basement) and (Basement<=1043.1671194))
82598      and ( Baths eq . or (-1.115123247<=Baths) and (Baths<=4.2986094852))
82599      and ( FirePlace eq . or (-0.423561472<=FirePlace) and (FirePlace<=2.1483321144))
82600      and ( FirstFloor eq . or (460.8149598<=FirstFloor) and (FirstFloor<=1635.6621044))
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '4' , '5') and _FILTERNORM2 not in ( '2' , '3') and ( Age eq . or (22.887167558<=Age) and (Age<=71.966043451)) and ( Basement eq . or (-747.89189<=Basement) and (Basement<=1043.1671194)) and ( Baths eq . or 
(-1.115123247<=Baths) and (Baths<=4.2986094852)) and ( FirePlace eq . or (-0.423561472<=FirePlace) and (FirePlace<=2.1483321144)) and ( FirstFloor eq . or (460.8149598<=FirstFloor) and (FirstFloor<=1635.6621044)) and ( GarageSize eq . or 
(-0.616145439<=GarageSize) and (GarageSize<=2.7262371819)) and ( SecondFloor eq . or (-625.7857762<=SecondFloor) and (SecondFloor<=760.21696885)) and ( TotalArea eq . or (419.22056596<=TotalArea) and (TotalArea<=2421.2656726)) and ( UpperArea eq . or 
(-435.1874089<=UpperArea) and (UpperArea<=1044.7653905)) ;
82601      and ( GarageSize eq . or (-0.616145439<=GarageSize) and (GarageSize<=2.7262371819))
MPRINT(EM_DIAGRAM):   run;
82602      and ( SecondFloor eq . or (-625.7857762<=SecondFloor) and (SecondFloor<=760.21696885))
82603      and ( TotalArea eq . or (419.22056596<=TotalArea) and (TotalArea<=2421.2656726))
82604      and ( UpperArea eq . or (-435.1874089<=UpperArea) and (UpperArea<=1044.7653905))
82605      ;
82606      run;

NOTE: DATA STEP view saved on file EMWS1.FILTER_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

82607      data WORK.FilterFILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.FilterFILTERVAR;
82608      set
82609      EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
82610      EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE'))
82611      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) EMWS1.Filter_CLASS(where=(CALCMETHOD ne 'NONE')) ;
82612      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
82613      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: There were 4 observations read from the data set EMWS1.FILTER_CLASS.
      WHERE CALCMETHOD not = 'NONE';
NOTE: The data set WORK.FILTERFILTERVAR has 13 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

82614      proc sort data= WORK.FilterFILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.FilterFILTERVAR nodupkey;
82615      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82616      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: 2 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTERFILTERVAR has 11 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

82617      proc sort data=WORK.M31RQC9A;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M31RQC9A;
82618      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82619      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M31RQC9A.
NOTE: The data set WORK.M31RQC9A has 17 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82620      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
82621      merge WORK.M31RQC9A WORK.FilterFILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M31RQC9A WORK.FilterFILTERVAR(in=_b);
82622      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82623      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
82624      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M31RQC9A.
NOTE: There were 11 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: The data set WORK.FILTERDMDBC has 12 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

82625      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
82626      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
82627      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
82628      %macro DMDBClass;
82629          GarageType(ASC) LotSize(ASC)
82630      %mend DMDBClass;
82631      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
82632      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
82633      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
82634      %macro DMDBVar;
82635          Age Basement Baths FirePlace FirstFloor GarageSize SalePrice SecondFloor
82636         TotalArea UpperArea
82637      %mend DMDBVar;
82638      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
82639      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
82640      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
82641      proc dmdb batch data=EMWS1.Part_TRAIN
82642      dmdbcat=WORK.Filter_DMDB
82643      varout=WORK.FILTER_VARSTATS
82644      maxlevel = 513
82645      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Part_TRAIN dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
82646      class %DMDBClass;
MPRINT(DMDBCLASS):   GarageType(ASC) LotSize(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
82647      var %DMDBVar;
MPRINT(DMDBVAR):   Age Basement Baths FirePlace FirstFloor GarageSize SalePrice SecondFloor TotalArea UpperArea
MPRINT(EM_DIAGRAM):  ;
82648      target
82649      SalePrice
82650      ;
MPRINT(EM_DIAGRAM):   target SalePrice ;
82651      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 218   Memory used = 511K.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
82652      quit;
82653      *--- end code ---*;

82654      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
82655      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
82656      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
82657      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
82658      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
82659      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
82660      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
82661      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
82662      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
82663      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
82664      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
82665      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
82666      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
82667      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
82668      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 10 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 10 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

82669      proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Filter_STATS data=WORK.FILTER_VARSTATS;
82670      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK.FILTER_VARSTATS to EMWS1.FILTER_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 10 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS1.FILTER_STATS has 10 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.11 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
